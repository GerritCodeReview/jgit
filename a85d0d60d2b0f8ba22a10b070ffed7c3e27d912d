{
  "comments": [
    {
      "key": {
        "uuid": "f88c4899_fb75c56a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 201156
      },
      "writtenOn": "2018-10-17T17:25:51Z",
      "side": 1,
      "message": "Maybe use static imports for these constants? (same in other files).",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbede7de_aac0c57a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 5413
      },
      "writtenOn": "2018-10-19T06:36:34Z",
      "side": 1,
      "message": "If you mean these:\nhttps://docs.oracle.com/javase/1.5.0/docs/guide/language/static-import.html\nI\u0027m not a friend of static imports, what are the benefits here? Polluting the namespace with all the static members you import sounds not right to me. It\u0027s clearer if i have qualifier \"Constants.\" before them.\n\nBut if you point me to a guideline or reason i will change.",
      "parentUuid": "f88c4899_fb75c56a",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "055e236d_3c91099b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 201156
      },
      "writtenOn": "2018-10-22T22:32:02Z",
      "side": 1,
      "message": "I was thinking on readability. The \"Constants\" prefix doesn\u0027t add information to the identifier (it is already in capital letters), and a shorter line:\n\"FileUtils.mkdir(new File(getDirectory(), BRANCHES))\"\nis easier to read than:\n\"FileUtils.mkdir(new File(getDirectory(), Constants.BRANCHES)\"\n\nAlso, there is no need to import statically everything (*), but only the required constants.\n\nAnd finally, static imports are already used in RefDirectory. Although the use of static imports is not consistent in the code, I got the impression (for the reviews I received) that code was moving towards using them (again, for readability).\n\nI should have marked this issue as \"optional\". Static or not, either works for me.",
      "parentUuid": "fbede7de_aac0c57a",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a96f2aa_4461b888",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 925
      },
      "writtenOn": "2018-10-23T07:02:03Z",
      "side": 1,
      "message": "I\u0027m not sure if we have a project guideline for this, but I typically do use static imports.\n\nHaving said that, the convention in this file seems to be not to use them (see L295-296 for example) so I would say it\u0027s OK to also not use them here for consistency.",
      "parentUuid": "055e236d_3c91099b",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b7fdf4c_40ff14b1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-10-23T09:26:06Z",
      "side": 1,
      "message": "Just my 2Â¢ on this static import business: my own approach is rather pragmatic. If it\u0027s only a few, I tend to use them; if I\u0027d end up with a whole slew of static imports possibly even from different classes, I prefer not to and prefix by the class/interface names.",
      "parentUuid": "5a96f2aa_4461b888",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987ed307_db590e68",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Constants.java",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 201156
      },
      "writtenOn": "2018-10-17T17:25:51Z",
      "side": 1,
      "message": "These lines look too long for the usual style and there are trailing whitespaces.\n\nI rely on eclipse to do the formatting, but I guess the rule is:\n\"So lines won\u0027t wrap, limit any doc-comment lines to 80 characters.\"\n(From the Oracle\u0027s javadoc guidelines [1], linked in the eclipse coding conventions [2] page)\n\nAbout the trailing whitespaces, it seems they are not removed automatically by eclipse (again in [2] \n\"Removing trailing whitespace\nIn JGit and EGit we have enabled the save action \"Remove trailing white spaces on all lines\" for Java sources. This works except for empty comment lines, see bug 414421.)\"\n\n[1] https://www.oracle.com/technetwork/java/javase/documentation/index-137868.html\n[2] https://wiki.eclipse.org/Coding_Conventions",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e14923a_3ee6c3da",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Constants.java",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 5413
      },
      "writtenOn": "2018-10-19T06:36:34Z",
      "side": 1,
      "message": "Ack. Thanks!",
      "parentUuid": "987ed307_db590e68",
      "revId": "a85d0d60d2b0f8ba22a10b070ffed7c3e27d912d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}