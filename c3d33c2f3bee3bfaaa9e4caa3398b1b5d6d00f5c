{
  "comments": [
    {
      "key": {
        "uuid": "1e2614e2_6c06c1b8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-10-17T01:16:05Z",
      "side": 1,
      "message": "needs $NON-NLS$ comment.\n\nShould this be set up in DepthWalk.java like the other flags?",
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1e95e8_7c70bbe2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-19T19:26:32Z",
      "side": 1,
      "message": "NON-NLS done.\n\nI\u0027d rather not, because DEEPEN_NOT is only needed in this file so it\u0027s best to reduce its scope.",
      "parentUuid": "1e2614e2_6c06c1b8",
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c603a4d_5c2b5b59",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-10-19T19:39:26Z",
      "side": 1,
      "message": "The same seems to be true of the other flags, like REINTERESTING. Should they be set up here as well?\n\nI don\u0027t have a strong opinion, as long as the code is consistent / predictable.",
      "parentUuid": "0a1e95e8_7c70bbe2",
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "619eb6d8_ae8ce9ec",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 129259
      },
      "writtenOn": "2018-10-08T19:35:48Z",
      "side": 1,
      "message": "Does this need to go deeper than this.depth?",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 138,
        "endChar": 38
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d43a0b46_70a153fb",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-08T22:02:58Z",
      "side": 1,
      "message": "(1) The caller sets depth to Integer.MAX_VALUE in this case, since the protocol does not support a numeric depth and deepen-not in the same request.\n(2) Even if the protocol supported both, the depth is measured from the wanted refs. For example, if we have \"deepen-not master\", have depth 10, and want master~11, restricting the depth here would not work.",
      "parentUuid": "619eb6d8_ae8ce9ec",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 138,
        "endChar": 38
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ae21045_ed01804f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthWalk.java",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-10-17T01:16:05Z",
      "side": 1,
      "message": "could use a null check (Objects.checkNotNull)",
      "range": {
        "startLine": 228,
        "startChar": 21,
        "endLine": 228,
        "endChar": 31
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a083a4b7_b574d0d7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/DepthWalk.java",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-19T19:26:32Z",
      "side": 1,
      "message": "Done. In Java 7, it\u0027s called Objects.requireNonNull, so I used that.",
      "parentUuid": "7ae21045_ed01804f",
      "range": {
        "startLine": 228,
        "startChar": 21,
        "endLine": 228,
        "endChar": 31
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb7e81e0_b2117fec",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 966,
      "author": {
        "id": 129259
      },
      "writtenOn": "2018-10-08T19:35:48Z",
      "side": 1,
      "message": "Are these shortened ref name?  If not, exactRef(s) is more efficient.",
      "range": {
        "startLine": 966,
        "startChar": 40,
        "endLine": 966,
        "endChar": 41
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c0a825d_dff9b57e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 966,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-08T22:02:58Z",
      "side": 1,
      "message": "Yes, these could be shortened. The protocol documentation is unclear about the format of the ref string, but the C implementation (process_deepen_not() in upload-pack.c) tolerates short names. I\u0027ll add a comment explaining this when I send out a new version (I\u0027ll wait for more comments and if there are none, I\u0027ll send one out tomorrow).",
      "parentUuid": "bb7e81e0_b2117fec",
      "range": {
        "startLine": 966,
        "startChar": 40,
        "endLine": 966,
        "endChar": 41
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36ed5d14_842e3579",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 966,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-10-17T01:16:05Z",
      "side": 1,
      "message": "Not about this change: I wonder if we can tighten that in protocol v2. Can the client do an initial ls-refs to disambiguate a ref?",
      "parentUuid": "4c0a825d_dff9b57e",
      "range": {
        "startLine": 966,
        "startChar": 40,
        "endLine": 966,
        "endChar": 41
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c3fd04c_24470c1a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 966,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-19T19:26:32Z",
      "side": 1,
      "message": "That is possible, or maybe it\u0027s better to allow (or require) a SHA-1 instead.",
      "parentUuid": "36ed5d14_842e3579",
      "range": {
        "startLine": 966,
        "startChar": 40,
        "endLine": 966,
        "endChar": 41
      },
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "548f7c64_8434dcc3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 2013,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-10-17T01:16:05Z",
      "side": 1,
      "message": "To avoid the casts, we could do\n\n  DepthWalk.RevWalk dw \u003d new DepthWalk.RevWalk(...);\n  dw.setDeepenSince(...);\n  dw.setDeepenNotes(...);\n  dw.assumeShallow(...);\n  rw \u003d dw;",
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3f5f536_5b6f3b47",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 2
      },
      "lineNbr": 2013,
      "author": {
        "id": 150123
      },
      "writtenOn": "2018-10-19T19:26:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "548f7c64_8434dcc3",
      "revId": "c3d33c2f3bee3bfaaa9e4caa3398b1b5d6d00f5c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}