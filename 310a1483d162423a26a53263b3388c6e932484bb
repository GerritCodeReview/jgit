{
  "comments": [
    {
      "key": {
        "uuid": "561bbfb3_ee849ad3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 87330
      },
      "writtenOn": "2018-12-27T00:24:43Z",
      "side": 1,
      "message": "According to the configuration, there are by default 32 locks. When two threads call getOrLoadRef with a different key, and they get the same lock, one of the call has a lock overhead. Can you measure the time for this overhead so that we can tell if we should increase the bucket size? It should be just a duration between here and loader.load. If it hits the cache after acquiring the lock, it\u0027s not needed.",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c71b51c_d6d61175",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 129259
      },
      "writtenOn": "2019-01-02T23:44:23Z",
      "side": 1,
      "message": "It\u0027s a bit tricky to export the lock wait time distribution, so I added the queue length metric instead.  The assumption is that long queue length implies not enough locks.",
      "parentUuid": "561bbfb3_ee849ad3",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c42e4899_5d136b46",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 87330
      },
      "writtenOn": "2019-01-03T06:17:55Z",
      "side": 1,
      "message": "\u003e The assumption is that long queue length implies not enough locks.\n\nI don\u0027t think that assumption is correct. If there are many requests for the same repository and all of them try to read the same file, the queue length becomes long, but this doesn\u0027t mean we need to adjust the lock size.",
      "parentUuid": "6c71b51c_d6d61175",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "816ad5b5_a8889daa",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 129259
      },
      "writtenOn": "2019-01-03T20:05:03Z",
      "side": 1,
      "message": "Moving the refs to a separate set of locks.",
      "parentUuid": "c42e4899_5d136b46",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43c80175_4c12660b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 87330
      },
      "writtenOn": "2018-12-27T00:24:43Z",
      "side": 1,
      "message": "It\u0027s a bit odd because for one getOrLoadRef call it increments both statHit and statMiss.",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0a81fcf_9996e9f4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsBlockCache.java",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 129259
      },
      "writtenOn": "2019-01-02T23:44:23Z",
      "side": 1,
      "message": "Good catch, thanks!",
      "parentUuid": "43c80175_4c12660b",
      "revId": "310a1483d162423a26a53263b3388c6e932484bb",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}