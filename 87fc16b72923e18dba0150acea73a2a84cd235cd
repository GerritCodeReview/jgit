{
  "comments": [
    {
      "key": {
        "uuid": "a7979753_cc2a2430",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 925
      },
      "writtenOn": "2017-10-25T10:41:31Z",
      "side": 1,
      "message": "Can we add a throws declaration to an existing public API, even if it\u0027s deprecated?\n\nWe just reverted a change [1] because adding throws broke backwards compatibility.\n\n[1] https://git.eclipse.org/r/#/c/110567/",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "87fc16b72923e18dba0150acea73a2a84cd235cd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_2c9e48ec",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 51
      },
      "writtenOn": "2017-10-25T12:30:02Z",
      "side": 1,
      "message": "Is only FileUtil public API or FileUtils as well? In both cases, we could return defaults instead which would be identical to non-existing paths. For the actual crashes we are encountering with FileUtils.lastModified [1], we fortunately have IOException in the throws clause already.\n\n[1] http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg03444.html",
      "parentUuid": "a7979753_cc2a2430",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "87fc16b72923e18dba0150acea73a2a84cd235cd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_ac1cf8f7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 925
      },
      "writtenOn": "2017-10-25T13:05:33Z",
      "side": 1,
      "message": "\u003e Is only FileUtil public API or FileUtils as well?\n\nAs far as I can see they\u0027re both public.  (My reasoning being they\u0027re public classes not in the .internal. package)\n\n\u003e return defaults instead\n\nYou mean catch the exception here and return false?  In that case maybe also log that it failed?",
      "parentUuid": "a7979753_2c9e48ec",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "87fc16b72923e18dba0150acea73a2a84cd235cd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_cc4064bd",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 51
      },
      "writtenOn": "2017-10-25T13:15:06Z",
      "side": 1,
      "message": "\u003e You mean catch the exception here and return false?\n\nYes.\n\n\u003e In that case maybe also log that it failed?\n\nI agree, logging makes sense here.",
      "parentUuid": "a7979753_ac1cf8f7",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "87fc16b72923e18dba0150acea73a2a84cd235cd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_275741a1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-10-25T22:30:33Z",
      "side": 1,
      "message": "public methods in both FileUtil and FileUtils are API and we can\u0027t change signature incompatibly in a minor version\n\nI think when we cannot change signature we should not silently hide the exception, if the path is invalid that\u0027s a problem which should be reported to the application using jgit. Not being a symlink is a different thing than trying to resolve an invalid path.",
      "parentUuid": "a7979753_cc4064bd",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "87fc16b72923e18dba0150acea73a2a84cd235cd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}