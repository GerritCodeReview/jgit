{
  "comments": [
    {
      "key": {
        "uuid": "8748d3a1_c45b14ce",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 861,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-12-10T10:41:11Z",
      "side": 1,
      "message": "Isn\u0027t it wrong to ignore autocrlf\u003d\u003dINPUT in this case. What if you have staged content with crlf and the workingtree file contains exactly the same bytes you have staged. If you set autocrlf to INPUT wouldn\u0027t that mean that we have to report that the contents differ? What\u0027s in the file is different from what you read (eol-canonicalized) from the index.",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_6a25a7e0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 861,
      "author": {
        "id": 8
      },
      "writtenOn": "2013-12-10T11:24:54Z",
      "side": 1,
      "message": "I don\u0027t undetstand. If the hash matches without tweaking, we\u0027re fine?",
      "parentUuid": "8748d3a1_c45b14ce",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_249f58e8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-12-10T10:41:11Z",
      "side": 1,
      "message": "Shouldn\u0027t we unsmudge entries only when they are smudged? You are setting the length independently from whether you are looking at a smudged entry or not. This is also true for the case for autcrlf \u003d FALSE",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_aa168f7b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 8
      },
      "writtenOn": "2013-12-10T11:24:54Z",
      "side": 1,
      "message": "What\u0027s the difference?",
      "parentUuid": "8748d3a1_249f58e8",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_a4b36353",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-12-10T16:36:09Z",
      "side": 1,
      "message": "You are right - I was on a wrong path. Here was my idea: Imagine you have staged a file with CRLF and autocrlf\u003dfalse. Now you switch to autocrlf\u003dinput. My expectation was that the file is immediatly dirty. That\u0027s because if on that file you would say \"git rm --cached\" and then \"git add\" you would get new content.\n\nBut I learned that even native git is not so picky. It overlooks that there is potentially new content in that file and reports it as clean.\n\nLet\u0027s talk git. Here is how I tried this situation:\n\n        git init\n        git config core.autocrlf false\n        echo -ne \u0027line1\\r\\nline2\\r\\n\u0027 \u003e dos.txt\n        echo -ne \u0027line1\\nline2\\n\u0027 \u003e unix.txt\n        echo -ne \u0027line1\\r\\nline2\\n\u0027 \u003e mixed.txt\n        git add *\n        git commit -m \"add unix,dos and mixed style file\"\n\n        # How do the working tree files and the index look like and what does git think about the status?\n        file *\n        git ls-files -s -t --debug\n\n        # set repo to autocrlf\u003dinput \n        git config core.autocrlf input\n\n        # get the status again. Be aware that git tells dos.txt is clean although if you would say\n        # \"git rm dos.txt \u0026\u0026 git add dos.txt\" you would get new content \n        git ls-files -s -t --debug -- dos.txt\n\n        # delete the index content and add the same files again but now with autocrlf\u003dinput \n        git rm --cached *\n        git add *\n        # Compare len and content-sha1 to previous status --- len fields have not changed (they reflect\n        # the length of the files in the working tree) but sha1\u0027s are now all the same (because of \n        # eol-canonicalization). That means: the add brought new content although the status was clean.\n        git ls-files -s -t --debug",
      "parentUuid": "8748d3a1_aa168f7b",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_244d9818",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 907,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-12-10T10:41:11Z",
      "side": 1,
      "message": "if a file is not changed then we are calling entry.setLength() twice with different values. This looks strange. Maybe this setLength should be in a \u0027else\u0027 block.",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_aae4cf1b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java",
        "patchSetId": 3
      },
      "lineNbr": 907,
      "author": {
        "id": 8
      },
      "writtenOn": "2013-12-10T11:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8748d3a1_244d9818",
      "revId": "99411876652d2dab89139311a8b03c8187e69dcd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}