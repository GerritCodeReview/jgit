{
  "comments": [
    {
      "key": {
        "uuid": "AAALwX///N8\u003d",
        "filename": "org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "left square bracket is wrong here :\ns/[0}/{0}/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///FA\u003d",
        "filename": "org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///N8\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///N4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "we create a checkout object here not a class",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///E8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///N4\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Ks\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "We\u0027re trying to get rid of the Tree class.  If you need a tree type thing, use a RevTree.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+/M\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "changed all the tree references to ObjectID because I need Ids and not trees. The main thing I do with the trees is feeding them into the treewalk - and therefore (strangly?) I cannot put a tree itself but an Id.\n\nOne  problem remains: that is one remaining call to Tree.findBlobMember() in hasParentBlob() (now called mergeTreeHasParentBlob()). I asked in http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg00458.html about the meaning of this call and would be happy to remove this call. Because of this problem I still have a reference to a Tree, but not in the API of this class.",
      "parentUuid": "AAALwX///Ks\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///N0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "object not class",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+/Y\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///N0\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Nw\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "this method is named preScanTwoTrees but in fact it scans 3 trees, this seems inconsistent",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Ko\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 205,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "For an empty tree like thing, use new EmptyTreeIterator() instead.  When you later ask for this slot as a CanonicalTreeParser type you will get back a null pointer.  (TreeWalk internally creates an EmptyTreeIterator as it dives down into non-existent subdirectories.)",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Ns\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "same as above, the method scans 2 trees but is named prescanOneTree",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+/A\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "see comment above",
      "parentUuid": "AAALwX///Ns\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///No\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "style nit:\ns/processing/Processing/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///No\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Nk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 256,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "typo: s/ant/want/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 256,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///Nk\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Ng\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "cannotDeleteFile: this doesn\u0027t look like the correct message\n\nI would rather expect a dedicated exception here, javadoc for setFailOnConflict() says this would throw a CheckoutConflictException",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "you are right - this exception is completely wrong. I changed it.",
      "parentUuid": "AAALwX///Ng\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Kg\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "We really should report on these failures.  On Windows if an application has a file open (e.g. Microsoft Word has the document file open) and we try to delete it, the delete fails by returning false.  Now the working directory has finished switching over, but there is this untracked file left laying around because an external application outside of our control is doing bad things to us.\n\nIMHO, its a checkout failure if we can\u0027t remove the file we want to remove... but since we are committed at this point to finishing the checkout we should keep going and report failure at the end after everything has been updated.  Ideally we make the list of left-behind files available to the calling application, so it can help the user to handle this messed up working tree by offering to retry deleting these files after they have closed the application(s) using them.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++Y\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "I added a boolean return value to the checkout method. If false is returned this means that not all obsolete files could be deleted and getToBeDeleted() contains the path names of the remaining files.",
      "parentUuid": "AAALwX///Kg\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Wasn\u0027t this already set by checkoutEntry?  And likewise with the length, I suggest below that it should be set in checkout Entry.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++E\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "i put everything in checkoutEntry()",
      "parentUuid": "AAALwX///KI\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///NQ\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "looks like wrong message text",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//++A\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "created a new exception for that",
      "parentUuid": "AAALwX///NQ\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Kk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 332,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Style-nit: This method can be static.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+98\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 332,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///Kk\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Kc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "I would be willing to bet you a beer next time we meet up in person that just doing:\n\n  if (!parentFile.delete())\n    break;\n\nis faster.  We have to do a system call to read the directory contents, and the operating system is forbidden from letting us remove a directory so long as it has at least one file/directory within it.  So we can accomplish both tasks in one system call by trying the delete, and aborting as soon as it doesn\u0027t work.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+94\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "that\u0027s right. I will not bet against it (although I owe you lot of beers for again and again finding style-nits and serious problems in my code. Never ever was my code so well reviewed).\n\nI was thinking about removing this method. We already walked over every single file and folder in the workTree. We should know the pathes of empty folders. But a first tryout grew too complicated and I wrote it down on the todo list.\n\nI more and more think it was a mistake to copy WorkDircheckout and create DirCacheCheckout from that copy. I was overwhelmed by so many topics that I thought this would save me some effort. But understanding WorkDirCheckout and writing DirCachecheckout from scratch would have been better because I wouldn\u0027t copy all that strange code.",
      "parentUuid": "AAALwX///Kc\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///NM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 352,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "s/with the index:/with the corresponding index entry:/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+90\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 352,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///NM\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KY\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Ick.  Maybe make the TreeWalk a field so you can just do tw.getPathString() here instead?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9k\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///KY\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KU\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 378,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "This test is far cheaper than the cost to get a path string, *or* to get ObjectIds, and yet happens for untracked files that aren\u0027t properly git ignored by us... so it happens a lot.  Pull this test up to the very start of the method so we can fail out much more rapidly when it occurs.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9s\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 378,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///KU\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///NA\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 379,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "typo and incomplete comment, better:\n\nfile only exists in working tree -\u003e ignore it",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9o\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 379,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///NA\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///M8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "typo: s/non-exisiting/non-existing/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///M4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "typo: s/Non-Exisiting/Non-Existing/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9c\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///M4\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///M0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 438,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "typo: s/conflicts/conflict/",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Mw\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 602,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "Start sentence with uppercase letter",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9U\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 602,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///Mw\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Ms\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "javadoc missing for parameter path",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9Q\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 603,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///Ms\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///Mo\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 612,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "style nit: add blanks around !\u003d operator\n\nmore of this type below",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KE\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 662,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Should this be private?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///MQ\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 665,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "Is this a TODO ?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+80\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 665,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "yes, that\u0027s a TODO. Similar in WorkDirCheckout where this was copied from.",
      "parentUuid": "AAALwX///MQ\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KA\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 675,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "A NameConflictTreeWalk should have dived into the working tree and told you about these conflicts.\n\nIf the tree wants to put a blob at \"foo\", but the working directory has \"foo/bar.c\" and \"foo/other.c\", so \"foo\" is a directory, you should get:\n\n  Path \"foo\":  Index blob;  working directory tree\n  Path \"foo/bar.c\":  Index none; working directory file\n  Path \"foo/other.c\":  Index none; working directory file\n\nThis means that you don\u0027t need to implement this recursion logic, you just need to keep track of D/F conflicts by storing the prefix path and then on each subsequent step of the walker check to see if the path is covered by one of those prefix paths.  If it is, you are inside of a D/F conflict and the working tree is conflicting with the blob record.\n\nActually, this is all something that the NameConflictTreeWalk should be able to tell you.  Just add a isDirectoryFileConflict() method to NameConflictTreeWalk that can export this, and keeps track of the current state for you.\n\nThe basic logic might be:\n\n* in combineDF() store the treeMatch iterator into a new dfConflict field, inside of the \"if (treeMatch !\u003d null) {\" condition near the end of the method.  Only set the field if it is currently null.\n* implement isDirectoryFileConflict to return true if dfConflict !\u003d null\n* modify popEntriesEqual to clear dfConflict if dfConflict is any of the current iterators, before popping.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALw3///1s\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 675,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-22T15:46:12Z",
      "side": 1,
      "message": "Shawn, I found problems with this implementation. Problem is that we will not go into combineDF() always. I saw it not happen when there is no gap between the file and the dir. I added tests to NameConflictTreeWalk tests which show the problem.\n\nI am also not sure whether we always enter popEntriesEqual to clean up after we left the D/F conflict path.\n\nI added another implementation of this in http://egit.eclipse.org/r/#change,1169.",
      "parentUuid": "AAALwX//+7Y\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///MM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 723,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "should be documented how this situation is handled",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///J8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 728,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Correct.  This cleanup is only safe if these paths are registered in the ignore list.",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwn////Q\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 728,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-16T02:10:14Z",
      "side": 1,
      "message": "Oddly, Git takes the attitude that if a file is in the ignore list, its OK for Git to destroy it, because its probably a build artifact or something else that is generated.  Though maybe that only applies to ignores that came from a .gitignore that is tracked?  I\u0027m pretty sure though C Git will happily delete a conflicting ignored file.",
      "parentUuid": "AAALwX//+7I\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///MI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 743,
      "author": {
        "id": 4
      },
      "writtenOn": "2010-07-06T15:14:33Z",
      "side": 1,
      "message": "Couldn\u0027t this be private ?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///J4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Why do we have to setup a whole new tree walk here?  Can\u0027t you use the existing walk state to check this?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwn////M\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-16T02:10:14Z",
      "side": 1,
      "message": "OK, thanks for explaining why the brute force approach is used here inside of isModified().  Its fine for now.",
      "parentUuid": "AAALwX//+7w\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KQ\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 793,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Given that we have already done this in the caller, do we also need to repeat it here?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX///KM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 826,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-07-06T20:46:28Z",
      "side": 1,
      "message": "Shouldn\u0027t we also set the length here?",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALwX//+9A\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java",
        "patchSetId": 4
      },
      "lineNbr": 826,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-07-08T23:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAALwX///KM\u003d",
      "revId": "36e2a520773da38f5ac0c9074a33ace75104eb7e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}