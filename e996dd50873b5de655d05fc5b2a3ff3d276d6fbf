{
  "comments": [
    {
      "key": {
        "uuid": "a7c23755_ed5d46c2",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-01-25T22:39:58Z",
      "side": 1,
      "message": "style nit: remove unnecessary blank line",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_06a6df0a",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 104680
      },
      "writtenOn": "2017-01-26T22:11:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c23755_ed5d46c2",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_cd624a7f",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-01-25T22:39:58Z",
      "side": 1,
      "message": "style nit: remove unnecessary blank line",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_469c57bb",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 104680
      },
      "writtenOn": "2017-01-26T22:11:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c23755_cd624a7f",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_ad48ae05",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-01-25T22:39:58Z",
      "side": 1,
      "message": "style nit: remove unnecessary blank line",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_66823359",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 104680
      },
      "writtenOn": "2017-01-26T22:11:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c23755_ad48ae05",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_4d4f1a11",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-01-25T22:39:58Z",
      "side": 1,
      "message": "I suggest to use a DirectoryStream with a filter instead, see https://docs.oracle.com/javase/tutorial/essential/io/dirs.html\n\nalso instead of File we could use Path",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_f03199f0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 5
      },
      "writtenOn": "2017-01-26T13:56:25Z",
      "side": 1,
      "message": "I think your change works. Great.\n\nBut there are optimisations I would suggest. If you have the array files in hand you have already all information in hand to detect orphans. No need to do again the expensive filesystem calls (the .exists() calls) in the isOrphan method.\n\nI would:\n- I would use the DirectoryStream with a filter for  .pack,.index,.bitmap files as Matthias suggested\n- I would sort the stream to ensure packs come directly before corresponding bitmap/index files. Then it is easy to detect orphan index,bitmap files (if they don\u0027t follow directly a corresponding .pack file)",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_06717fff",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 104680
      },
      "writtenOn": "2017-01-26T22:11:33Z",
      "side": 1,
      "message": "I met problems when trying to achieve point 2 here.\nSuppose we have an ordered stream.\nI do not know how to access to other items in stream when looping.\n\nFor now, no io operations after listing, except deletion.",
      "parentUuid": "a7c23755_f03199f0",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_a688cb76",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 104680
      },
      "writtenOn": "2017-01-26T22:11:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c23755_4d4f1a11",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_c2c7708a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 5
      },
      "writtenOn": "2017-01-27T15:41:29Z",
      "side": 1,
      "message": "I would have simply remembered the last seen pack file in a new variable and would have checked each bitmap/index whether they correspond to the packfile. If not they are orphans. We would get rid of the exists() filesystem calls which you do after listing.\n\nLike in:\n  Path packDir \u003d Paths.get(repo.getObjectsDirectory().getAbsolutePath(),\n      \"pack\"); //$NON-NLS-1$\n  String base \u003d null;\n  \n  String[] list \u003d packDir.toFile().list((file, name) -\u003e {\n    return (name.endsWith(\".\" + PackExt.PACK.getExtension())\n        || name.endsWith(\".\" + PackExt.BITMAP_INDEX.getExtension())\n        || name.endsWith(\".\" + PackExt.INDEX.getExtension()));\n  });\n  Arrays.sort(list);\n  for (int i \u003d list.length - 1; i \u003e\u003d 0; i--) {\n    if (list[i].endsWith(PackExt.PACK.getExtension())) {\n      base \u003d list[i].substring(0, list[i].lastIndexOf(\u0027.\u0027));\n    } else {\n      if (base \u003d\u003d null || !list[i].startsWith(base)) {\n        try {\n          Files.delete(\n            new File(packDir.toFile(), list[i]).toPath());\n        } catch (IOException e) {\n          LOG.error(e.getMessage(), e);\n        }\n      }\n    }\n  }",
      "parentUuid": "a7c23755_06717fff",
      "revId": "e996dd50873b5de655d05fc5b2a3ff3d276d6fbf",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}