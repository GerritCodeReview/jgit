{
  "comments": [
    {
      "key": {
        "uuid": "f05e7485_e3cfc569",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 4
      },
      "writtenOn": "2022-02-04T00:47:10Z",
      "side": 1,
      "message": "when does the client only request HEAD ?",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f77dc422_e239e87f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-04T10:30:21Z",
      "side": 1,
      "message": "Will add also an E2E example on the commit message.",
      "parentUuid": "f05e7485_e3cfc569",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26a1238d_941eef63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-04T15:30:30Z",
      "side": 1,
      "message": "I have clarified the use-case in the commit message and, also, verified that it is exactly what happens at JGit-level.",
      "parentUuid": "f77dc422_e239e87f",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3c60b97_ebc09db9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 13
      },
      "lineNbr": 366,
      "author": {
        "id": 4
      },
      "writtenOn": "2022-02-04T00:47:10Z",
      "side": 1,
      "message": "why should this return all refs for prefix HEAD ?",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ffdf7ad_10d9343e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 13
      },
      "lineNbr": 366,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-04T10:29:42Z",
      "side": 1,
      "message": "The first parameter represents the extra slicing performed on the RefMap. The refs are already filtered by the RefDirectory and have a single item, therefore there isn\u0027t any further filtering needed here.\n\nWorth adding one extra comment on it? WDYT?",
      "parentUuid": "e3c60b97_ebc09db9",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15b41593_2d263a88",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 13
      },
      "lineNbr": 366,
      "author": {
        "id": 4
      },
      "writtenOn": "2022-02-05T09:31:44Z",
      "side": 1,
      "message": "I don\u0027t understand how this helps to improve memory consumption or performance.\n\nThis seems to contradict the javadoc of RefMap.prefix:\n\n\t/**\n\t * Prefix denoting the reference subspace this map contains.\n\t * \u003cp\u003e\n\t * All reference names in this map must start with this prefix. If the\n\t * prefix is not the empty string, it must end with a \u0027/\u0027.\n\t */\n\nif we replace \"HEAD/\" by \"\" then prefix no longer denotes the reference subspace this map contains",
      "parentUuid": "5ffdf7ad_10d9343e",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d28e9d2_25c22ce9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 13
      },
      "lineNbr": 366,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-05T11:39:13Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand how this helps to improve memory consumption or performance.\n\nBy keeping only 1 ref in memory in RefMap, instead of potentially millions of them.\nI need to add one more assertion to that condition.\n\n\u003e This seems to contradict the javadoc of RefMap.prefix:\n\u003e \n\u003e \t/**\n\u003e \t * Prefix denoting the reference subspace this map contains.\n\u003e \t * \u003cp\u003e\n\u003e \t * All reference names in this map must start with this prefix. If the\n\u003e \t * prefix is not the empty string, it must end with a \u0027/\u0027.\n\u003e \t */\n\nBefore this fix, packed and loose contained all refs, even if the client only requested HEAD. After this fix, packed and loose contain only HEAD and the refs it is pointing to.\n\nI should add one more assertion on the above condition, which it will show that it wasn\u0027t doing its job before this fix.\n\n\u003e if we replace \"HEAD/\" by \"\" then prefix no longer denotes the reference subspace this map contains\n\nWell, HEAD isn\u0027t really a prefix isn\u0027t it? We do not know upfront to which ref it is pointing to.",
      "parentUuid": "15b41593_2d263a88",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d71618e_c3d424bc",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 13
      },
      "lineNbr": 366,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-05T23:13:06Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand how this helps to improve memory consumption or performance.\n\nLook at RefDatabase.getRefsByPrefix(): when you pass \"HEAD\" as a prefix, it makes a FULL scan of all refs in memory at L398 (potentially millions of entries) and then makes a scan in memory for all of them at L409 for filtering a single one.\n\nHope that clarifies the focus of the change. I\u0027ll add another test to demonstrate that now there isn\u0027t a full scan involved anymore.",
      "parentUuid": "9d28e9d2_25c22ce9",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd89d32_bc1ccad2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 401,
      "author": {
        "id": 4
      },
      "writtenOn": "2022-02-04T00:47:10Z",
      "side": 1,
      "message": "why is this needed ? RefDirectoryTest also succeeds without this change",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfbb39c_857446a5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 401,
      "author": {
        "id": 97483
      },
      "writtenOn": "2022-02-04T10:29:42Z",
      "side": 1,
      "message": "RefDirectoryTest succeeds, yes, but at the cost of loading all refs in memory. I\u0027ve added another test that would demonstrate the failure: if you comment this line the extra test would fail.",
      "parentUuid": "3dd89d32_bc1ccad2",
      "revId": "a3eb6a03f116fea4e9247dfa28d63046b1b9bb78",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}