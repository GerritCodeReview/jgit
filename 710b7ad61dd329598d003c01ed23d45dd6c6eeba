{
  "comments": [
    {
      "key": {
        "uuid": "AABOIn///5I\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 1
      },
      "writtenOn": "2011-05-02T14:20:28Z",
      "side": 1,
      "message": "Do we need to keep this debugging code in?\n\nIf so I would prefer to use Boolean to parse the variable and support true/false here rather than set/unset.",
      "revId": "710b7ad61dd329598d003c01ed23d45dd6c6eeba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn///48\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1
      },
      "writtenOn": "2011-05-02T14:20:28Z",
      "side": 1,
      "message": "This isn\u0027t true. You could work harder as a programmer and transfer the exception object from the gobbler thread into a variable that is shared with the calling thread, then have the calling thread wait for completion of the gobbler thread and check its exception status.\n\nActually, this may be what you want. If we are unable to read the command and we are capturing the command\u0027s stderr stream, we should wrap that up into an exception object and throw it to the caller rather than assuming everything is OK, or printing it to our own Java stderr.",
      "revId": "710b7ad61dd329598d003c01ed23d45dd6c6eeba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}