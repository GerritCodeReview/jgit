{
  "comments": [
    {
      "key": {
        "uuid": "2721e7e2_7edb4be4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 4
      },
      "writtenOn": "2015-08-24T15:06:34Z",
      "side": 1,
      "message": "I think this shouldn\u0027t be API of RefDirectory, I\u0027d declare it private",
      "revId": "5a53c279ee734ffac49ed0cfb383761a4096cd4e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_0122b260",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-24T08:04:25Z",
      "side": 1,
      "message": "Should we really add a potentially endless loop here? After some iterations and/or some time spent on retrying I would expect this method just gives up and throws an excetion.",
      "revId": "5a53c279ee734ffac49ed0cfb383761a4096cd4e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_a445b41b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 5082
      },
      "writtenOn": "2015-08-24T13:34:41Z",
      "side": 1,
      "message": "Stale file handles will happen on open files (or directories) only.  That means it will be triggered during the read of this file if the file is deleted by another client.  The looping will cause another open of the file, so the original incident which causes the original stale file handle will not cause another stale filehandle.  Thus, for a single event, a single retry would do.  The loop is here in case the file is replaced again during the reread!  This is possible when someone is pushing a bunch of deleted refs, the packed-refs file could be overwritten many times in a row.  It is unlikely that the writter of the new packed-refs files is faster than our read, but it certainly is possible if they are on a closer/faster connection to the NFS server than we are.  This loop prevents a failure in those cases.  And in those cases, we want the re-read to happen as fast as possible so that we are more likely to beat the writter and at least get a snapshot of the packed-refs file while the writter is constantly changing it.  Any delays in this loop will make it more likely that we have to retry again.",
      "parentUuid": "2721e7e2_0122b260",
      "revId": "5a53c279ee734ffac49ed0cfb383761a4096cd4e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_41030ac7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 771,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-24T08:04:25Z",
      "side": 1,
      "message": "If we hit this situation than we would go through this loop as fast as possible until the stale file handle situation is corrected. I don\u0027t know how long it takes typically until this stale-file-handle situation is resolved but if you expect that this may take seconds then we should add  a sleep() before we continue. Then we wouldn\u0027t burn CPU cycles with active waiting and would allow other threads/processes to do something meaningful.",
      "revId": "5a53c279ee734ffac49ed0cfb383761a4096cd4e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}