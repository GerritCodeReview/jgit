{
  "comments": [
    {
      "key": {
        "uuid": "bdc427c5_da84b72c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 20,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "this implementation was deleted in https://git.eclipse.org/r/c/jgit/jgit/+/152841",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 32
      },
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e601711_bf74b91a",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 13
      },
      "lineNbr": 593,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "move this comment before the line it\u0027s commenting ?",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13e99bee_cd041b89",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 13
      },
      "lineNbr": 603,
      "author": {
        "id": 98905
      },
      "writtenOn": "2020-12-16T18:43:32Z",
      "side": 1,
      "message": "rename this to `exclude` everywhere",
      "range": {
        "startLine": 603,
        "startChar": 14,
        "endLine": 603,
        "endChar": 22
      },
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e56d5d04_6f143be9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 270,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "nit: lines seem to be too wide, we use max line length 80",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa03d0a9_5e5aea08",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "none",
      "range": {
        "startLine": 277,
        "startChar": 78,
        "endLine": 277,
        "endChar": 81
      },
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b0527f_4d0148e8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 287,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "These long method and variable names are hard to follow. Basically you are filtering the passed exclude set to remove prefixes not existing in the reftable and remove overlapping prefixes.\n\nIt seems we could use predicates filtering a stream of the prefixes to exclude to improve readability, something like:\n\n\texclude.stream().filter(prefixExists(table)).filter(...\n\n\tstatic Predicate\u003cString\u003e prefixExists(Reftable table) {\n\t\treturn p -\u003e {\n\t\t\ttry (RefCursor c \u003d table.seekRefsWithPrefix(p)) {\n\t\t\t\treturn c.next();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}\n\nI think it would be good to add unit tests for the filter predicates",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a33a13fc_766d09cc",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 291,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "I think this try should start immediately after acquiring the lock in line 285 otherwise if any of the methods called above throws an exception the lock wouldn\u0027t be released",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5fbe9d8_8e2d3d38",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 292,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "You are handling RefCursor in try-with-resource, so this comment seems wrong",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d91e8105_395484a1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java",
        "patchSetId": 13
      },
      "lineNbr": 433,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-12-18T01:35:46Z",
      "side": 1,
      "message": "we are now heading for 5.11",
      "revId": "46ea84ad771722d2fa7ce27afc3ed9872950af23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}