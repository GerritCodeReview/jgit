{
  "comments": [
    {
      "key": {
        "uuid": "2721e7e2_2c4b8680",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "We can remove WIP and really explain what this commit is is actually doing and why",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 11,
        "endChar": 22
      },
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_ac601602",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "missing @since tag. Do you have an API Baseline configured?",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_2c28a60d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 37145
      },
      "writtenOn": "2015-08-17T05:59:21Z",
      "side": 1,
      "message": "I was actually using a different editor besides Eclipse for this.  I\u0027ll try opening it in Eclipse so that I can see what warnings it is giving you.",
      "parentUuid": "2721e7e2_ac601602",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_8c63920c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public method. The javadoc should contain @since tag",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_cc646a15",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public method. The javadoc should contain @since tag",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_0cfde2a3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "If p happens to be a FileTreeIterator (which is very likely) then we should use p.fileModeStrategy instead of the default one.\nMaybe a test would be great where we see that FileTreeIterator instances created for subtrees contain the same FileModeStrategy instance than the parent.",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_4c34fa64",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 37145
      },
      "writtenOn": "2015-08-17T05:59:21Z",
      "side": 1,
      "message": "Yes, if you\u0027d like to move forward with this branch it definitely needs some tests.\n\nI would like to hear your thoughts on whether or not the simple constructor for FileEntry is going to be a problem before I do the rest of the work for this branch, but if you think that will be OK and you\u0027d like me to finish off this branch I will clean everything up and add some tests.\n\nThanks again for your review.",
      "parentUuid": "2721e7e2_0cfde2a3",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_0c6fa2ef",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public class. The javadoc should contain @since tag",
      "range": {
        "startLine": 167,
        "startChar": 1,
        "endLine": 167,
        "endChar": 34
      },
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_6c3d7eea",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public method. The javadoc should contain @since tag",
      "range": {
        "startLine": 168,
        "startChar": 11,
        "endLine": 168,
        "endChar": 19
      },
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_4c407a5e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public class. The javadoc should contain @since tag",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_ac377607",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public field.",
      "range": {
        "startLine": 172,
        "startChar": 46,
        "endLine": 172,
        "endChar": 54
      },
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_cc4bca7e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-16T17:40:03Z",
      "side": 1,
      "message": "Eclipse complains about a missing javadoc for an public method. The javadoc should contain @since tag",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_6c31fe74",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 37145
      },
      "writtenOn": "2015-08-17T05:59:21Z",
      "side": 1,
      "message": "I still have a concern here...\n\nYou\u0027d suggested that you like the idea of having the full DIR_NO_GITLINKS functionality, and that you\u0027d imagine it being a setting on the Repo\u0027s \"Config\" object, so that it would affect all instances of FileTreeIterator/FileEntry.\n\nI\u0027m afraid that without changing the constructor for FileEntry (or changing something else about FileEntry) in such a way that it would have access to the config object, or such that FileModeStrategy was a required argument, then there is still a risk of weird edge cases here.\n\nSo, e.g., let\u0027s say I clean up this branch and we get it merged.  Then I file a follow-up patch that implements DirNoGitLinksStrategy, and changes the default implementation of FileTreeIterator such that it builds up the correct FileModeStrategy based on Config, and passes that in to the alternate FileEntry constructor.\n\nIn that case, if a user calls \"new FileEntry\" from their code, using the old constructor, they will not get the same behavior as the FileTreeIterator / Config would have given them.  That seems bad?\n\nBasically, it seems to me that the current single signature for the FileEntry constructor is not sufficient.  Do you disagree?\n\nWould it be possible to make all of the constructors for FileEntry private and provide some other method, like FileTreeIterator.getFileEntry or Repository.getFileEntry to construct them?",
      "parentUuid": "2721e7e2_cc4bca7e",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_df9b6a7d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-08-17T09:16:36Z",
      "side": 1,
      "message": "I hoped that having one constructor taking a FileModeStrategy and another one without that is ok. Knowledge about the WorkingTreeOptions (read from the config) is only needed by those\nwho want to create instances of FileModeStrategy. FileEntry itself does not need access to config/WorkingTreeOptions because it delegates everything to FileModeStrategy.\n\nIt\u0027s right: users which use the old API without specifying a FileModeStrategy will get a FileEntry with default default behaviour (no DIR_NO_GITLINKS). And the rest of JGit will use FileTreeIterators with FileModeStrategy and then we have different semantics when using a low-level API and when calling high-level (e.g. Git.open()....status().call()). That\u0027s not nice. One solution would be to remove (or at least deprecate) the constructor which is not taking a FileModeStrategy.\n\nI guess we don\u0027t have so many callers of FileEntry constructors. I see it in tests, one place in EGit and FileTreeITerator itself. All those have the possibility to construct a proper FileModeStrategy.\n\nBut I agree, there may be people outside using FileEntry constructors and which do the config variable for dir_no_gitlinks set. Only those people will have problems. Since we introduce this config variable currently (and even native git doesn\u0027t know such a config variable) chances are quite small that we hit this problem, or?",
      "parentUuid": "2721e7e2_6c31fe74",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_5f8f7a39",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 37145
      },
      "writtenOn": "2015-08-17T09:24:08Z",
      "side": 1,
      "message": "OK, I think you are probably right.  It seems like it might be a good idea to deprecate the old constructor and include some documentation about why it might cause problems.\n\nI think I was getting a little confused because I was thinking that, for the full-fledged DIR_NO_GITLINKS implementation, there will still be some changes in behavior for the default use case, because JGit currently does not have the same semantics as cgit (for example, in cgit, if you do \"git add foo/bar.txt\", and \"foo\" contains a .git directory, cgit will not create a gitlink, regardless of the value of DIR_NO_GITLINKS).  And I was thinking that that change in behavior was at risk of not working properly with the old FileEntry constructor...\n\nBut now that I have read your comment and am thinking about it a bit more, it seems like the situation that I described above will end up being an implementation detail for the DefaultFileModeStrategy, and so, you\u0027re right that users who called the old constructor would still see those changes.\n\nI think I understand now; I will go ahead and start working on cleaning up this PR and adding tests ASAP.",
      "parentUuid": "2721e7e2_df9b6a7d",
      "revId": "ee397440d2efff1464c02e8c4203ed8604920404",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}