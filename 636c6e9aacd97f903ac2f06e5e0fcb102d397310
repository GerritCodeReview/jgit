{
  "comments": [
    {
      "key": {
        "uuid": "87f6139c_ce750c72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 951
      },
      "writtenOn": "2015-07-01T18:57:57Z",
      "side": 1,
      "message": "looks ready to drop the RFC tag",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 5
      },
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_2e5010da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-07-01T19:06:51Z",
      "side": 1,
      "message": "Still awaiting comments from Shawn.",
      "parentUuid": "87f6139c_ce750c72",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 5
      },
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_0e20b456",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-07-01T21:18:52Z",
      "side": 1,
      "message": "So each time we push to a ref, the file grows in length. And we have to delta compress that over time. At some point that blob may become so large that compressing/decompressing it will be a bottleneck and delta compression will stop running altogether because the file exceeds some limit, by default 50M in JGit\u0027s packer.\n\nWhat about replacing the file on each push and using the history of the file to get the certs?\n\nDownside is obviously history of the ref is O(history of repo).",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_6e7cd82a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-07-01T21:26:34Z",
      "side": 1,
      "message": "Jonathan suggested replacing the file as well (in a different context), but it doesn\u0027t feel right to me. This is git, the tree should be a snapshot of the state, and the state is that you have accumulated all of these push certs.\n\nWhat if instead we had multiple files per ref, like refs/foo@{certs.0001}. Then when 0001 gets too big, say 10M, we append to 0002 instead.\n\nThis also raises the point that the get(ref) -\u003e List interface is not particularly well-suited to reading large numbers of certs in a streaming fashion. Maybe we need to implement this as get(ref) -\u003e Iterable.\n\nIf we used multiple files, then the iterable could be implementing by slurping in one file at a time starting with the last one, and iterating through its contents in reverse order. (As later optimizations we can play games like walking through the file forward and recording start offsets for each cert but discarding the contents, walking backwards till we find a version line, etc.)",
      "parentUuid": "87f6139c_0e20b456",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_4e5e3cbf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 951
      },
      "writtenOn": "2015-07-01T21:40:21Z",
      "side": 1,
      "message": "For comparison, https://github.com/sitaramc/gitolite/blob/master/contrib/hooks/repo-specific/save-push-signatures also replaces the file. The cert at each path is \"here is a push cert and signature describing the current state of this ref\".\n\nI think just seeing the latest cert and being able to use \"git log\" to see history since the last time I fetched push-certs would be pleasant.",
      "parentUuid": "87f6139c_6e7cd82a",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_4e059cc9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 115,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-07-01T21:18:52Z",
      "side": 1,
      "message": "nit: formatting is not consistent here",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 115,
        "endChar": 4
      },
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_4e2c7c4b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-07-01T21:18:52Z",
      "side": 1,
      "message": "Lets hope we never record refs/changes/... namespace?",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_8e22e452",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-07-01T21:26:34Z",
      "side": 1,
      "message": "That\u0027s what the fanout directory is for right? :)",
      "parentUuid": "87f6139c_4e2c7c4b",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_8e54a49b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/PushCertificateStore.java",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 951
      },
      "writtenOn": "2015-07-01T21:40:21Z",
      "side": 1,
      "message": "If there are too many refs then we could switch to using a TreeFormatter instead of a DirCache to build the modified tree.\n\nI think the DirCache-based implementation should be fine for now.",
      "parentUuid": "87f6139c_8e22e452",
      "revId": "636c6e9aacd97f903ac2f06e5e0fcb102d397310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}