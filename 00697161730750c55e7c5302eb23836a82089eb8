{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cec4fa9c_bd42fca3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T19:00:42Z",
      "side": 1,
      "message": "Can you also post some numbers for much smaller counts? I am also interested in small counts on repos with massive commit counts, perhaps such as the chromium project?",
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62c639f4_1de90306",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T06:01:38Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "cec4fa9c_bd42fca3",
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a76b0f4d_96d3ccad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-13T19:45:06Z",
      "side": 1,
      "message": "I guess by small counts, I meant like 1. :) What I am really trying to gather is whether there is a now a startup cost of reading the entire commit graph that could impact small walks, or RevCommit parsing, which would not be there without commit graphs. Could you quantify this cost somehow, and in which situations it might be possible to see a performance degradation due to this?",
      "parentUuid": "62c639f4_1de90306",
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d2a7746_c6e4a655",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-11-18T07:31:13Z",
      "side": 1,
      "message": "I mentioned the startup cost of reading the entire commit-graph in the commit message.\n\n\u003e The startup cost of reading the entire commit graph is small. After\n\u003e testing, reading a commit-graph with 1 million commits takes less than\n\u003e 50ms. If we use RepositoryCache, it will not be initialized util the\n\u003e commit-graph is rewritten.\n\n\nThanks.",
      "parentUuid": "a76b0f4d_96d3ccad",
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc0f78e5_3347850e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T18:54:25Z",
      "side": 1,
      "message": "Instead of shuffling data from a CommitData to the RevCommit, would it make more sense to make the CommitGraph able to return a RevCommit that is a CommitData?",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 7
      },
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfa10dad_03df6d1c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-10-26T23:34:31Z",
      "side": 1,
      "message": "I believe RevCommit should be the one. For example if we use generation numbers V2 (to be implemented) they consist from 2 parts:\n1. Commit date which might be obtained from any source\n2. Fix value that is stored in 2 commit graph chunks\n\nSo we really should have both in order to use it and commit is the most convenient place to keep it.",
      "parentUuid": "bc0f78e5_3347850e",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 7
      },
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95dad92f_53a054ab",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T05:32:30Z",
      "side": 1,
      "message": "@Martin: the owner of the RevCommit instances is the RevWalk. If we want the commit graph to instantiate them, it would need access to the walk (e.g. to create the RevCommits for the parents of commit). This way (copying), we keep the graph unaware of the walk.\n\nI think that if we implement commit-data as a \"pointer\" to the byte[] in the graph, we could even do only Commit-graph -\u003e RevCommit, instead of Commit-graph -\u003e Commit-data -\u003e RevCommit (saving one copy of the data)",
      "parentUuid": "cfa10dad_03df6d1c",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 224,
        "endChar": 7
      },
      "revId": "00697161730750c55e7c5302eb23836a82089eb8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}