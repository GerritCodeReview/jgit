{
  "comments": [
    {
      "key": {
        "uuid": "e9d678ef_d2839230",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-03-03T07:42:33Z",
      "side": 1,
      "message": "The test which failed with an NPE when trying to add the pack to the map uses a pack name without extension (\"preserved\") which is skipped now silently. Earlier it was stored under the null key. Is this intended ? Or do all packfiles need an extension ?",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c6d94ff_e4e802e9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-03-03T23:19:18Z",
      "side": 1,
      "message": "Hmm. So the null key would never have been reached inside the loop starting on line 422 anyway. I think it\u0027s expected *here* that all packfiles need an extension. You can see in https://git.eclipse.org/r/c/jgit/jgit/+/175130/10/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java that before this series this method required files to start with \u0027pack-\u0027 and then in scanPacksImpl() it ignores any files without extensions. If you think it makes sense, we can push that validation into PackFile.\n\nThat said, I can\u0027t find where in those tests it\u0027s creating pack files without extensions. Can you help me find that code?\n\nI do think I saw some tests a while back that used bogus extensions (\".idxV2\", \".copy1\", \".2\"), looks like PackFileSnapshotTest.java and PackWriterTest.java at least. Should we try to do something about those?",
      "parentUuid": "e9d678ef_d2839230",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee709b51_57b6686b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-03-03T23:40:10Z",
      "side": 1,
      "message": "I saw this when debugging the previous patchset which threw a NPE.\nI added an exception breakpoint for NPEs in Eclipse and it triggered for the test which used a packfile without extension.",
      "parentUuid": "7c6d94ff_e4e802e9",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ecbdf38_4278e770",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-03-04T00:35:35Z",
      "side": 1,
      "message": "Thanks! I\u0027ve never used that before. I figured it out though. \"preserved\" isn\u0027t a pack file, it\u0027s the directory name we\u0027re using for preserving pack files. So I think it\u0027s harmless, but we could change line 507 to be \u0027directory.listFiles()\u0027 if we want to avoid seeing it. If we improve PackFile to be stricter about valid pack file names (i.e. must start with \u0027pack-\u0027, end with a known extension, etc), that would also catch it.",
      "parentUuid": "ee709b51_57b6686b",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d0b6767_02f5df96",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-03-04T00:40:56Z",
      "side": 1,
      "message": "And to be clear, just using listFiles() wouldn\u0027t be enough. We\u0027d need to do isDirectory() on each File we get from that. Thinking more about this method though, I know we\u0027ve had problems where repacking hasn\u0027t run and we get many many pack files. Would it make sense to use the newDirectoryStream method to go through the list?",
      "parentUuid": "5ecbdf38_4278e770",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4bc46b5_8dca67f5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-03-04T17:12:00Z",
      "side": 1,
      "message": "looking at the available options to traverse files in a directory [1] I would lean towards using Files.list() and filter out directories and files which git doesn\u0027t care about in a pack directory. E.g. if you open the pack directory on a Mac using Finder you end up with a .DS_Store file which I think we should ignore.\n\n[1] https://www.baeldung.com/java-list-directory-files",
      "parentUuid": "5d0b6767_02f5df96",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35a3f53f_9e2d3415",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackDirectory.java",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-03-04T17:28:06Z",
      "side": 1,
      "message": "Sounds good. Ok, if I do that in a follow up (or parent) change since it\u0027s unrelated to PackExt conversion to Enum?\n\nAlso, what\u0027s your thought on where the filtering logic should live, here or in PackFile? I\u0027d prefer PackFile unless you think that would be too restrictive.",
      "parentUuid": "e4bc46b5_8dca67f5",
      "revId": "8e8877c1b26ab1bb8143166187d43ab82e959986",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}