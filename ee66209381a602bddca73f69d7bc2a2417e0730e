{
  "comments": [
    {
      "key": {
        "uuid": "d5e716d2_58c4686f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T05:54:28Z",
      "side": 1,
      "message": "Thanks! Propagating the exception like this makes sense to me.",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef158ca_1c272dd7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T06:04:04Z",
      "side": 1,
      "message": "It won\u0027t. RenameDetector.compute() has no ProgressMonitor, isn\u0027t cancellable, and won\u0027t throw CancelledException (nor CanceledException).",
      "parentUuid": "d5e716d2_58c4686f",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fc85ab2_24450d98",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T05:56:23Z",
      "side": 1,
      "message": "Could/should this propagate the exception as well?",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "774bf1db_d2c99ec9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T06:04:04Z",
      "side": 1,
      "message": "Later. There\u0027s bug 536323 about making DiffEntry.scan() cancelable, and maybe we\u0027d need another bug about handling cancellation in DiffFormatter, too. For now, we\u0027re just trying to make the rename detector cancelable. I guess next would be diffs.",
      "parentUuid": "4fc85ab2_24450d98",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "949ec977_b7ba84e4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T06:14:19Z",
      "side": 1,
      "message": "Ah, sorry for the lack of clarity. I meant letting it propagate out as IOException (and later, once we\u0027re ready to break API, as CanceledException).",
      "parentUuid": "774bf1db_d2c99ec9",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc952172_19779931",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T06:35:39Z",
      "side": 1,
      "message": "Right now this progressMonitor is used only for the rename detector. I suppose once we\u0027d make DiffEntry.scan() cancellable, we\u0027ll also make DiffFormatter.scan() and possibly also DiffFormatter.format() cancellable, and use that progressMonitor there, too. At that point it may make sense to just propagate here. Right now I\u0027m unsure about propagating; we\u0027d have to examine all callers. For instance, o.e.egit.core.op.CreatePatchOperation shouldn\u0027t log an error if diff formatting was canceled.\n\nSo if we want to go in small steps I think catching it here is fine. Later, when that whole diff machinery is made cancelable, propagating would be the right thing to do.\n\nPerhaps a TODO comment would be in order here.",
      "parentUuid": "949ec977_b7ba84e4",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1347aa57_8cb4f129",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T05:56:23Z",
      "side": 1,
      "message": "Likewise",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "845f046d_5c8cbfd8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T06:04:04Z",
      "side": 1,
      "message": "Likewise what? Propagate CancelledException? I wouldn\u0027t. First, with a NullProgressMonitor, it should never be raised, and second, the idea is still to replace these uses of o.e.j.errors.CancelledException by o.e.j.api.errors.CanceledException once we do the next major version number increase.",
      "parentUuid": "1347aa57_8cb4f129",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8285f82e_3b070cef",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T06:14:19Z",
      "side": 1,
      "message": "Why do we need the try block? CancelledException is a subclass of IOException, and as you mentioned, the exception will never be triggered because we\u0027re passing in a NullProgressMonitor..",
      "parentUuid": "845f046d_5c8cbfd8",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f9408c_0f1a92b1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T06:35:39Z",
      "side": 1,
      "message": "You\u0027re right, with o.e.j.errors.CancelledException we wouldn\u0027t need to catch it. However, with o.e.j.api.errors.CanceledException, we would need this catch clause. Since this is a kind of \"backwards refactoring\" to avoid API breakage now and we still have the intention of using o.e.j.api.errors.CanceledException eventually, leaving the catch clause is fine by me. It\u0027ll avoid extra work once we do the switch.\n\nPersonally, I would have added a comment like \"// cannot happen with a NullProgressMonitor\" inside the catch clause, regardless of the cancellation exception used. But that\u0027s IMO a minor detail.\n\nBut if you prefer we could remove the try-block here now, and re-add it later once we do actually switch the exceptions.",
      "parentUuid": "8285f82e_3b070cef",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f61d8fa6_8a99743e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 951
      },
      "writtenOn": "2018-08-08T06:51:28Z",
      "side": 1,
      "message": "\u003e But if you prefer we could remove the try-block here now, and re-add it later once we do actually switch the exceptions.\n\nYes, please. It makes the code easier to reason about, to not have to worry about special-case non-exception return values for exceptional conditions.\n\nI think when we do change the exception type, we can plumb it through (or at worst, wrap it in another exception type).",
      "parentUuid": "03f9408c_0f1a92b1",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a60c6ba3_be4378d5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-08T07:36:22Z",
      "side": 1,
      "message": "Done.\n\n\u003e (or at worst, wrap it in another exception type)\n\nUgh. Please, no. We\u0027re only accumulating technical debt if we do that. There\u0027s already DirCacheCheckout.java:486 (checkout()) where this is done. Callers end up with a JGitInternalException with cause IOException with cause CanceledException and have to jump through hoops to figure out that a cancellation has occurred.",
      "parentUuid": "f61d8fa6_8a99743e",
      "revId": "ee66209381a602bddca73f69d7bc2a2417e0730e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}