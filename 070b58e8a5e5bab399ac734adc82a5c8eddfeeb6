{
  "comments": [
    {
      "key": {
        "uuid": "f0500a0b_aa5d1beb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1628
      },
      "writtenOn": "2021-07-30T22:21:35Z",
      "side": 1,
      "message": "Nit: Eclipse generally follows the \"short log\" 50-ish character subject line, so that `git log --pretty\u003doneline` looks good and indicates the user impact. So something like\n\"DFS block cache: Refactor to enable parallel index loading\"",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9f6189e_e4a46fbe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 304375
      },
      "writtenOn": "2021-07-30T22:49:31Z",
      "side": 1,
      "message": "Thanks for the suggestion, updated.",
      "parentUuid": "f0500a0b_aa5d1beb",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcf24d01_5c0d3f85",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexV1.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1628
      },
      "writtenOn": "2021-07-30T22:21:35Z",
      "side": 1,
      "message": "Is there a reason for this shuffling in order of these lines? If the thought is to maximize parallel loading, wouldn\u0027t the getBitmaps() call go first? In fact packIndex could wait to block until fully loaded until immediately before the \"for\" loop. The reverseIndex could wait until the last line of the ctor.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbaf5a3e_43b8ef36",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexV1.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1628
      },
      "writtenOn": "2021-07-31T02:35:58Z",
      "side": 1,
      "message": "Still unresolved.",
      "parentUuid": "fcf24d01_5c0d3f85",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc02d66_8bb12f72",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexV1.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 129259
      },
      "writtenOn": "2021-07-31T02:44:18Z",
      "side": 1,
      "message": "I guess the supplier.get() can kick off async loading, and the returned index and reverseIndex will block on the first read til they are fully loaded?\n\nThat said I don\u0027t think this what\u0027s happening based on the changes to DfsPackFile.java in the same patchset.",
      "parentUuid": "bbaf5a3e_43b8ef36",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0c3c53_405c72a9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexV1.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 304375
      },
      "writtenOn": "2021-07-31T03:04:39Z",
      "side": 1,
      "message": "Yes, this is where the magic is. Reading from storage happens first here to allow reading index and creating ridx happen at the same time. Keeping this in the order it was changes nothing as bitmap loading will be blocked.\n\nBitmap constructor is still blocked on index and reverse index, but not reading from storage.",
      "parentUuid": "8fc02d66_8bb12f72",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "070b58e8a5e5bab399ac734adc82a5c8eddfeeb6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}