{
  "comments": [
    {
      "key": {
        "uuid": "4a80ccf5_61b810cc",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ObjectInfoRequest.java",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 951
      },
      "writtenOn": "2021-07-30T19:51:27Z",
      "side": 1,
      "message": "Nicer link: https://www.kernel.org/pub/software/scm/git/docs/technical/protocol-v2.html#_object_info",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ff1fa91_46477ae0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ObjectInfoRequest.java",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 304988
      },
      "writtenOn": "2021-07-30T21:04:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a80ccf5_61b810cc",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a38d96c_c8057d77",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 951
      },
      "writtenOn": "2021-07-30T19:51:27Z",
      "side": 1,
      "message": "This should throw a PackProtocolException to reflect the invalid oid",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cee73d96_3485cab2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 304988
      },
      "writtenOn": "2021-07-30T21:04:00Z",
      "side": 1,
      "message": "that would abort at the first invalid id received which is different from what git itself is doing. I am not sure that is what we want to do (I think we might want to return an error to the caller and continue). WDYT?",
      "parentUuid": "4a38d96c_c8057d77",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9eeb262_d1855065",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 951
      },
      "writtenOn": "2021-07-30T23:26:56Z",
      "side": 1,
      "message": "\u003e that would abort at the first invalid id received which is different from what git itself is doing.\n\nDo you have a reference with more details? I don\u0027t believe the Git protocol has a way to \"error and continue\" --- i.e., there are only progress messages and fatal errors, no non-fatal errors.",
      "parentUuid": "cee73d96_3485cab2",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a6ee74f_7700e8f8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 304988
      },
      "writtenOn": "2021-08-02T17:24:32Z",
      "side": 1,
      "message": "It might be that I did not correctly interpret the API but if you look here:\n\nhttps://github.com/git/git/blob/940fe202adcbf9fa1825c648d97cbe1b90d26aec/protocol-caps.c#L55\n\nWhat I am doing is using packet_writer_error() but i might be that all it does is send a normal message back with some specific formatting I guess.",
      "parentUuid": "f9eeb262_d1855065",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f55e5080_0175e8bf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 304988
      },
      "writtenOn": "2021-08-06T22:52:55Z",
      "side": 1,
      "message": "FWIIW, I looked at the implementation of packet_writer_error() And it seems it just sends the error message back to the caller prefixed with \"ERR \". Would it be a good idea to do the same here in JGit?",
      "parentUuid": "6a6ee74f_7700e8f8",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cebc2ed7_da68402c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 201156
      },
      "writtenOn": "2021-08-17T20:56:42Z",
      "side": 1,
      "message": "If you throw a PackProtocolException, its message is written with the ERR prefix (see UploadPack line ~757 [before this change]), the exception is propagated and the request is closed.\n\nFrom what Jonathan writes above, this is the same in git, ERR is the end of the request. So for me sounds good to emit the PackProtocolException.",
      "parentUuid": "f55e5080_0175e8bf",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03bfa72c_d621df19",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 304988
      },
      "writtenOn": "2021-08-19T21:23:02Z",
      "side": 1,
      "message": "Actually no, if you check https://github.com/git/git/blob/940fe202adcbf9fa1825c648d97cbe1b90d26aec/pkt-line.c#L609 you will see that packet_writer_error() in git does exactly the same as packet_writer_write() (which is juts above it in the source code). It does not abort the request. So if I do this in JGit, its behavior will be different when compared to the standard git (which I am pretty sure is not what we want).",
      "parentUuid": "cebc2ed7_da68402c",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab06e836_0a4802e4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ProtocolV2Parser.java",
        "patchSetId": 11
      },
      "lineNbr": 274,
      "author": {
        "id": 951
      },
      "writtenOn": "2021-08-20T00:39:43Z",
      "side": 1,
      "message": "If it continues after an ERR line, then its peer will disconnect the connection anyway. In other words, if it continues after an ERR line then that would be a bug in Git (feel free to file at crbug.com/git/new if you have more details).",
      "parentUuid": "03bfa72c_d621df19",
      "revId": "e2ceea7ac999dc192c67cfdc81652c3cc0a70539",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}