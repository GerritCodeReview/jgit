{
  "comments": [
    {
      "key": {
        "uuid": "57b1c80a_9417fc79",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/UploadPackTest.java",
        "patchSetId": 23
      },
      "lineNbr": 1577,
      "author": {
        "id": 150123
      },
      "writtenOn": "2019-04-04T22:07:17Z",
      "side": 1,
      "message": "I prefer \"Preparer\", but I guess \"Preparator\" is a real word too.",
      "range": {
        "startLine": 1577,
        "startChar": 7,
        "endLine": 1577,
        "endChar": 25
      },
      "revId": "d3dfea6c48a5d0e0101c6994215b8149a45e9c1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28cee130_42180bc0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java",
        "patchSetId": 23
      },
      "lineNbr": 1993,
      "author": {
        "id": 150123
      },
      "writtenOn": "2019-04-04T22:07:17Z",
      "side": 1,
      "message": "This code is changed in this patch, but then changed again in the next patch. I think that the next patch should be squashed onto this one.",
      "range": {
        "startLine": 1993,
        "startChar": 53,
        "endLine": 1993,
        "endChar": 54
      },
      "revId": "d3dfea6c48a5d0e0101c6994215b8149a45e9c1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6041947c_1f0e067b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/ObjectWalk.java",
        "patchSetId": 23
      },
      "lineNbr": 102,
      "author": {
        "id": 150123
      },
      "writtenOn": "2019-04-04T22:07:17Z",
      "side": 1,
      "message": "As it is, I think it\u0027s too seen-centric. I would prefer the following (no need to mention \"seen\", I think):\n\npublic interface VisitationPolicy {\n/**\nWhenever the rev or object walk reaches a Git object, if that object already exists as a RevObject, #shouldVisit is called to determine if that object should be visited.\n*/\nboolean shouldVisit(RevObject o);\n/**\nCalled when an object is visited.\n*/\nvoid visited(RevObject o);\n}\n\n/**\nEach object is visited at most once, tracked by setting SEEN on RevObject#flags.\n*/\nSIMPLE_VISITATION_POLICY {\n}",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "d3dfea6c48a5d0e0101c6994215b8149a45e9c1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}