{
  "comments": [
    {
      "key": {
        "uuid": "87e453f8_30e2c9bf",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 9
      },
      "writtenOn": "2016-06-03T14:22:56Z",
      "side": 1,
      "message": "This may not be a reliable test. Assuming that the eviction task will run during this time may be wrong in a high CPU usage environment.",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_cb5e53f6",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 6590
      },
      "writtenOn": "2016-06-06T17:06:08Z",
      "side": 1,
      "message": "2 options:\n-Sleep a bit longer, 100ms?\n-Rework WorkQueue so I can set(for testing only) the executor and I would use a DirectExecutor.\n\nWhich one would you prefer(or maybe you have another suggestion)?",
      "parentUuid": "87e453f8_30e2c9bf",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_df7369d6",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 9
      },
      "writtenOn": "2016-06-07T12:17:53Z",
      "side": 1,
      "message": "\u003e Sleep a bit longer, 100ms?\n\nNo. This again doesn\u0027t guarantee anything... just makes the probability of the test failing a bit lower. However, the test is also getting slower.\n\n\u003e Rework WorkQueue so I can set(for testing only) the executor and I would use a DirectExecutor\n\u003e Which one would you prefer(or maybe you have another suggestion)?\n\nI am not sure what is a really good solution. I think that what we really want to test here is that when repository is expired it gets removed from RepositoryCache. So we could just call RepositoryCache.close(expiredRepo) and then verify that it is removed from the RepositoryCache?\n\nWe may also want to test that an expired repository *eventually* gets removed from the RepositoryCache i.e. that the Repository.close() is called. So we could just wrap or mock a Repository and expect/wait a call from another thread in its close method. There should be a timeout on how long to wait. However, most of the time the call will come within the configured time and the test will not wait longer than than necessary.\n\nAnother aspect we may want to test is that the RepositoryCacheConfig properly (re)configures the executor. This would likely require a rework of WorkQueue where we can set a custom executor and then setting up a mock which expects a call to scheduleWithFixedDelay with the values configured in the RepositoryCacheConfig.\n\nWhat we *probably don\u0027t want* to test is that the java.util.concurrent.ScheduledThreadPoolExecutor works properly i.e. that it runs tasks at the scheduled rate. This is tested in the JDK code.",
      "parentUuid": "87e453f8_cb5e53f6",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_5f04b921",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 9
      },
      "writtenOn": "2016-06-07T12:27:13Z",
      "side": 1,
      "message": "\u003e So we could just call RepositoryCache.close(expiredRepo) and then verify that it is removed from the RepositoryCache?\n\nThis doesn\u0027t make sense as the expiration check is not a part of the RepositoryCache.close method... this code is a part of the scheduled Runnable. To make this testable we could move this check into a new method RepositoryCache.closeIfExpired and then call just this method from the scheduled Runnable?",
      "parentUuid": "87e453f8_df7369d6",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_dfcb69b5",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 6590
      },
      "writtenOn": "2016-06-07T14:26:44Z",
      "side": 1,
      "message": "In change (https://git.eclipse.org/r/#/c/74775/), I added unit test for eviction that is testing the eviction code that used to be in the runnable (I moved it into a method as suggested).\n\nIn this change, I still need to test configure/reconfiguration.",
      "parentUuid": "87e453f8_5f04b921",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_4ec24c01",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositoryCacheTest.java",
        "patchSetId": 9
      },
      "lineNbr": 223,
      "author": {
        "id": 6590
      },
      "writtenOn": "2016-06-07T18:11:47Z",
      "side": 1,
      "message": "I know you do not like having a test that depends on time (I do not either) but without having a mocking library and dependencies injection, it\u0027s harder to keep code cohesive and easy to test.\n\nTo test the aspect of configuring and reconfiguring the executor, I would first need to mock the executor and to make use of the mock, I would need either to inject it to WorkQueue or to use something like powermock to mock static call. Personally, I try to never use powermock, I think you have a design issue to fix instead of using powermock.\n\nI know there was some discussion to put this change series into 4.4.x so will adding a dependency to JGit block us to put this change in a minor release?\n\nIn latest PS, I added a test that still depends on time but is more robust and do not simply wait an arbitrary amount of time. If you still prefer that I add a mocking library, I will work on it.",
      "parentUuid": "87e453f8_dfcb69b5",
      "revId": "491620eec85a170ae21e394ed4cf638a78be010f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}