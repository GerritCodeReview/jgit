{
  "comments": [
    {
      "key": {
        "uuid": "89d393d5_d8d36730",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2094,
      "author": {
        "id": 150123
      },
      "writtenOn": "2019-08-20T21:48:22Z",
      "side": 1,
      "message": "Reverse this formatting change? Same comment throughout this commit.",
      "range": {
        "startLine": 2094,
        "startChar": 3,
        "endLine": 2094,
        "endChar": 15
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcfce166_333ecc8e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2094,
      "author": {
        "id": 87330
      },
      "writtenOn": "2019-10-05T04:13:46Z",
      "side": 1,
      "message": "Sure, but this is currently violating Eclipse formatter format...",
      "parentUuid": "89d393d5_d8d36730",
      "range": {
        "startLine": 2094,
        "startChar": 3,
        "endLine": 2094,
        "endChar": 15
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c23771e0_7dfdcadf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2094,
      "author": {
        "id": 1628
      },
      "writtenOn": "2019-10-09T01:07:24Z",
      "side": 1,
      "message": "I think the convention is that if code is not formatted correctly, you leave it alone until you are touching code nearby. Which is the case here, reworking much of this function. So it seems like reformatting the function with the current formatter settings is fine.\n\n I did verify that my setup of the formatter generates the same results.",
      "parentUuid": "dcfce166_333ecc8e",
      "range": {
        "startLine": 2094,
        "startChar": 3,
        "endLine": 2094,
        "endChar": 15
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ecda26_5371fda6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 150123
      },
      "writtenOn": "2019-08-20T21:48:22Z",
      "side": 1,
      "message": "I noticed that errors are no longer wrapped in UploadPackInternalServerErrorException. I notice that a future commit reintroduces this wrapping, but I think it\u0027s better if the wrapping is retained here and then removed in the future commit. This makes each commit self-contained, and makes the future commit clearer in that we can exactly see where the functionality is being moved from and to.",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feac7141_6c9618de",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 87330
      },
      "writtenOn": "2019-10-05T04:13:46Z",
      "side": 1,
      "message": "I don\u0027t think I re-introduced them (and I re-read the patches, but I cannot find the re-introduction of the wrapper). If there\u0027s a re-introduction, that\u0027s a bug as the whole point of this series of changes is to let API users to customize the error handling behavior. The wrapper indicates the exception handling is done by JGit, which should not be.",
      "parentUuid": "18ecda26_5371fda6",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6e0d2c4_82597f81",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 1628
      },
      "writtenOn": "2019-10-09T01:07:24Z",
      "side": 1,
      "message": "How does this affect processing in UploadPackServlet? It appears that will be setting a SC_INTERNAL_SERVER_ERROR error where it wasn\u0027t before, which actually seems desirable. Does it need to be updated to use try-with-resources so that its SmartOutputStream is always closed?",
      "parentUuid": "feac7141_6c9618de",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "534ab4be_14f9a157",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 87330
      },
      "writtenOn": "2019-10-09T01:35:11Z",
      "side": 1,
      "message": "\u003e How does this affect processing in UploadPackServlet?\n\nSee https://git.eclipse.org/r/c/147144/.\n\nUntil UploadPackServlet starts using UploadPack#uploadWithExceptionPropagation, which will be introduced in https://git.eclipse.org/r/c/147143/, UploadPackServlet will not be affected.\n\n\u003e It appears that will be setting a SC_INTERNAL_SERVER_ERROR error where it wasn\u0027t before, which actually seems desirable.\n\nWith this CL, all exceptions will be handled in UploadPack#upload. This means that the exceptions observed from UploadPackServlet will not change.\n\nThroughout the sequence of the changes, UploadPack#upload will not change the exceptions it throws.\n\n\u003e Does it need to be updated to use try-with-resources so that its SmartOutputStream is always closed?\n\nSee https://git.eclipse.org/r/c/147144/ again. I think SmartOutputStream needs to be closed only when the buffered output needs to be flushed. There are cases where GitSmartHttpTools#sendError is used, and in this case, because the buffered output is not needed, SmartOutputStream is not closed.",
      "parentUuid": "a6e0d2c4_82597f81",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49d1383c_1151012e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 1628
      },
      "writtenOn": "2019-10-09T06:51:45Z",
      "side": 1,
      "message": "Right, I missed the exception handling in upload().\n\nHere is what I see: \n1) This change consolidates the sideband handling code in one place by moving the sideband setup code out of the sendPack(final boolean sideband, ...) method and refactoring that \"boolean sideband\" parameter to be sendPack(ProgressMonitor pm, ..., OutputStream packOut, ...)\n2) It also drops the exception handling in sendPack(PackStatistics.Accumulator accumulator, ...). This should be clearly indicated in the commit message if it is really intended.\n\nWhen using sideband, the original code\u0027s exception handling in sendPack(PackStatistics.Accumulator accumulator, ...) writes to SideBandOutputStream via the reportInternalServerErrorOverSideband() method, and then wraps the original exception in a UploadPackInternalServerErrorException to indicate it was handled and throws that wrapper exception. That is all gone now.\n\nBut upload() doesn\u0027t write the sideband. For the ServiceMayNotContinueException it writes the PacketLineOut(rawOut), sets err.setOutput(), and rethrows. For IOException/RuntimeException/Exception, upload() writes PacketLineOut(rawOut), wraps the exception in a UploadPackInternalServerErrorException, and throws that wrapper exception.\n\nThe next change xx adds SideBandErrorWriter, which reintroduces the writing of SideBandOutputStream. To have a non-breaking series of changes, don\u0027t you need to keep the exception handling in sendPack(PackStatistics.Accumulator accumulator, ...) in this commit and remove it in the next one?",
      "parentUuid": "534ab4be_14f9a157",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a12f9a2_cc3fd7d8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java",
        "patchSetId": 5
      },
      "lineNbr": 2102,
      "author": {
        "id": 87330
      },
      "writtenOn": "2019-10-09T07:38:32Z",
      "side": 1,
      "message": "\u003e 2) It also drops the exception handling in sendPack(PackStatistics.Accumulator accumulator, ...). This should be clearly indicated in the commit message if it is really intended.\n\nDone.\n\n\u003e The next change xx adds SideBandErrorWriter, which reintroduces the writing of SideBandOutputStream. To have a non-breaking series of changes, don\u0027t you need to keep the exception handling in sendPack(PackStatistics.Accumulator accumulator, ...) in this commit and remove it in the next one?\n\nSimply swapped the commits. ErrorWriter is defined before this commit now.",
      "parentUuid": "49d1383c_1151012e",
      "range": {
        "startLine": 2102,
        "startChar": 3,
        "endLine": 2102,
        "endChar": 6
      },
      "revId": "135faceae7c7335cc42c56c7d002ca5f5319dfee",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}