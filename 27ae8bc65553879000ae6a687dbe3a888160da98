{
  "comments": [
    {
      "key": {
        "uuid": "a7fb1785_d8844c65",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-03-10T00:39:18Z",
      "side": 1,
      "message": "I don\u0027t understand why \"internal\" types like DfsPackFile, PackFile, ObjectDatabase and RefDatabase are AutoCloseable.\n\nWe _never_ use these in scopes where you would use try-with-resources:\n\n  try (PackFile pf \u003d .... ) {\n  }\n\njust never would happen. We retain these objects long term in the block cache, or they are held by a higher level Repository object that should manage the close for the caller(s).",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_388ab06f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-03-10T00:39:18Z",
      "side": 1,
      "message": "I am mixed on this being AutoCloseable.\n\nMaybe its correct but are there going to be some warnings now in Gerrit and EGit and the like where a Repository is opened in one scope and held a long time before being closed elsewhere?",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_b87d00d7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-10T00:41:18Z",
      "side": 1,
      "message": "Personally I think it will improve Gerrit overall to have this AutoCloseable, despite maybe having to sprinkle @SuppressWarnings here and there.",
      "parentUuid": "a7fb1785_388ab06f",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_f8666847",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-03-10T00:42:05Z",
      "side": 1,
      "message": "OK, I can accept Repository being AutoCloseable. What about the internal types like RefDatabase, PackFile and friends?",
      "parentUuid": "a7fb1785_b87d00d7",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_f3b1692e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-10T00:49:33Z",
      "side": 1,
      "message": "No, they are always owned by a higher-level object that should be closed.\n\nSimilarly Git should definitely not be AutoCloseable IMHO. I often find myself doing:\n\n Repository repo \u003d openRepo();\n try {\n   Git git \u003d Git.wrap(repo);\n   git.someHighLevelApi().call();\n   somethingNotExposedByGitApi(repo);\n } finally {\n   repo.close();\n }\n\nTo avoid a warning we would have to do:\n\n try (Repository repo \u003d openRepo();\n     Git git \u003d Git.wrap(repo)) {\n   git.someHighLevelApi().call();\n   somethingNotExposedByGitApi(repo);\n }\n\nBut this is broken, because repo gets double-closed which screws with refcounting.",
      "parentUuid": "a7fb1785_f8666847",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_73c57983",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-10T00:51:05Z",
      "side": 1,
      "message": "Honestly, I don\u0027t know why Git has a close method at all, but we can\u0027t change it now.\n\nBut making it AutoCloseable says \"hey you should definitely use this in a try-with-resources block\", which is a broken pattern in this case.",
      "parentUuid": "a7fb1785_f3b1692e",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_f3d84968",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-03-10T00:54:25Z",
      "side": 1,
      "message": "In the Git case wrap could set a flag inside of the Git instance that makes the close() a no-op, leaving the repo open for the caller to release.\n\nUnfortunately that is a major semantic change for anyone currently doing:\n\n  Git git \u003d Git.wrap(... some repo ...);\n  // do stuff\n  git.close();\n\nto use the higher level API to manage the repository itself.\n\nWe could add a wrapNoClose() method or something to Git to make close() a no-op, but I can\u0027t think of what that method would be called. Maybe we overload wrap?\n\n  public static Git wrap(Repository repo, boolean close);\n\nThen your example is:\n\n try (Repository repo \u003d openRepo();\n     Git git \u003d Git.wrap(repo, false)) {\n   git.someHighLevelApi().call();\n   somethingNotExposedByGitApi(repo);\n }\n\nWhich is still awkward.",
      "parentUuid": "a7fb1785_f3b1692e",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_33d3f149",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-10T00:55:55Z",
      "side": 1,
      "message": "Or we could just leave Git alone...",
      "parentUuid": "a7fb1785_f3d84968",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_53e95df2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 1
      },
      "writtenOn": "2015-03-10T00:58:28Z",
      "side": 1,
      "message": "So leave it sort of broken with implements AutoCloseable?",
      "parentUuid": "a7fb1785_33d3f149",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_d308ad69",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-10T00:59:40Z",
      "side": 1,
      "message": "Oops. I meant leave alone and not make it AutoCloseable. But since this change is already submitted that would mean reverting the AutoCloseable change to Git.",
      "parentUuid": "a7fb1785_53e95df2",
      "revId": "27ae8bc65553879000ae6a687dbe3a888160da98",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}