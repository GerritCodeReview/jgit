{
  "comments": [
    {
      "key": {
        "uuid": "9c50ac9b_3fab47a3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/HttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 40012
      },
      "writtenOn": "2018-11-20T08:49:59Z",
      "side": 1,
      "message": "I think it would be good to also clarify the other method related to header fields. You should not make any assumption about the header name being uppercase or lowercase. To clarify that distinction it would good to explicitly mention this difference in this method name: e.g. getHeaderValuesForCaseInsensitiveName(String name)",
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb3291bf_8ca50883",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/HttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-11-20T09:01:01Z",
      "side": 1,
      "message": "\u003e getHeaderValuesForCaseInsensitiveName(String name)\n\nPlease, no. If headers are case insensitive, then all those getters should simply treat them case-insensitively. Probably getHeaderFields() at line 147 should already do this merging, and return a TreeMap with a String.CASE_INSENSITIVE_ORDER comparator.",
      "parentUuid": "9c50ac9b_3fab47a3",
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94117ab0_02308afa",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/HttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 40012
      },
      "writtenOn": "2018-11-20T15:15:13Z",
      "side": 1,
      "message": "Then we would basically need to change the semantics of both String getHeaderField(String) and Map\u003cString, List\u003cString\u003e\u003e getHeaderFields();\n\nI would be fine with that but currently this is not part of this. Also in that case the javadoc of all methods must be adjusted to mention they are all case-insensitive now.",
      "parentUuid": "cb3291bf_8ca50883",
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "471e1517_ddd621e6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/HttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 4
      },
      "writtenOn": "2018-11-20T17:31:52Z",
      "side": 1,
      "message": "I am working on the latter",
      "parentUuid": "cb3291bf_8ca50883",
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "188117f6_5051dd35",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/JDKHttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-11-20T07:25:06Z",
      "side": 1,
      "message": "@NonNull String name ?",
      "range": {
        "startLine": 180,
        "startChar": 37,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d9602d_32639723",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/http/JDKHttpConnection.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-11-20T07:25:06Z",
      "side": 1,
      "message": "https://ci.eclipse.org/jgit/job/jgit.gerrit/14897/findbugsResult/new/\n\nHow about\n\n  m.entrySet().stream()\n    .filter(e -\u003e keyName.equalsIgnoreCase(e.getKey())\n    .forEach(fields.addAll(e.getValue());\n\nOr with an iterator:\n\n  m.entrySet().iterator().forEachRemaining(e -\u003e\n    if (keyName.equalsIgnoreCase(e.getKey())) {\n      fields.addAll(e.getValue());\n    }\n  );",
      "revId": "7625dd778639947c5e377a9195d9c9642c9c5f5a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}