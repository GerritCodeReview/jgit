{
  "comments": [
    {
      "key": {
        "uuid": "AAALzX///mc\u003d",
        "filename": "jgitnative/lstat.c",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-10-29T22:58:22Z",
      "side": 1,
      "message": "We might need a #ifdef around these lines, not every platform has nsec available.  When its not supported, we need to fill with 0.",
      "revId": "513d51af8f295b28386bbc0bf3dc1e37b6a047c1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALzX///mg\u003d",
        "filename": "jgitnative/lstat.c",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-10-29T22:58:22Z",
      "side": 1,
      "message": "Probably fine, but ENOENT or ENOTDIR are likely failures, failures we may wish to make more obvious to the Java code.\n\nSo we should make those more easily detectable than relying on checking the translated platform error string.",
      "revId": "513d51af8f295b28386bbc0bf3dc1e37b6a047c1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALzX///mo\u003d",
        "filename": "org.eclipse.jgit.macosx_x86_64/src/org/eclipse/jgit/util/fs/os/NativeFSAccess.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-10-29T22:58:22Z",
      "side": 1,
      "message": "Should we use java.io.File here and have the wrapper unpack to String with getAbsolutePath()?",
      "revId": "513d51af8f295b28386bbc0bf3dc1e37b6a047c1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALzX///mk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/fs/FSAccess.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-10-29T22:58:22Z",
      "side": 1,
      "message": "FWIW, this stuff should go in the static initializer of the class.\n\nWe should also use an interface to bridge the two together, that is the NativeFSAccess should extend the abstract FSAccess class and implement the abstract virtual methods that are defined.  That way at runtime we are only dispatching through the abstract method rather than through reflection.",
      "revId": "513d51af8f295b28386bbc0bf3dc1e37b6a047c1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}