{
  "comments": [
    {
      "key": {
        "uuid": "a1a1be23_3d82cfcd",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 129259
      },
      "writtenOn": "2020-12-01T01:13:30Z",
      "side": 1,
      "message": "Is it better to create return a new RefCursor to skip some refs? For use case like return all refs except for refs/changes/*, I would use seekRefsWithPrefix(\"\") to get a RefCursor for all refs, then once the cursor hits the first refs/changes/* then I call RefCursor.skipPrefix(\"refs/changes/\") to jump past all the changes. How would that be done with this proposed seekPastRef()?",
      "range": {
        "startLine": 142,
        "startChar": 27,
        "endLine": 142,
        "endChar": 38
      },
      "revId": "aeb2757b849f5dc63c92442cfd187c733edf8477",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52ba8bf4_a2d50912",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 301552
      },
      "writtenOn": "2020-12-01T11:59:10Z",
      "side": 1,
      "message": "See follow-up change for this implementation, but I\u0027m doing exactly what you described: get all changes, when hitting refs/changes/* use seekPastRef(refs/changes/) and continue with the new RefCursor. I agree that your idea is possibly cleaner from a design perspective, but it didn\u0027t cost anything to get around it (the only difference is that your method is a part of RefCursor and mine is a part of Reftable). Hence, I don\u0027t see why that\u0027s better.\n\nThere is much more complexity in implementing this suggestion since I\u0027ll need to implement the method 3-4 times, each with different implementation for those RefCursors. Because of this it looks like RefCursors will become much more complicated.\n\nUnless you feel strongly about this I\u0027d rather just stick with the current implementation. WDYT?",
      "parentUuid": "a1a1be23_3d82cfcd",
      "range": {
        "startLine": 142,
        "startChar": 27,
        "endLine": 142,
        "endChar": 38
      },
      "revId": "aeb2757b849f5dc63c92442cfd187c733edf8477",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4099d6bc_08f44abe",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 129259
      },
      "writtenOn": "2020-12-01T17:51:37Z",
      "side": 1,
      "message": "Example: want all refs, except refs/a/*, refs/d/*, and refs/p/*.\nThis implementation would create 4 cursors, and hence 4 random search over the corpus.\nMy proposal creates 1 cursor, also 4 random search, but the corpus gets smaller and smaller. For example, once the cursor reaches the first refs/d/* items, it needs to seek past refs/d/*, but at this point the corpus is only (refs/d/*, end) instead of (refs/a/*, end). Maybe this is not big enough of a difference, but a pair of RefCursor.skipTo(prefix) and RefCursor.skipPast(prefix) seem intuitive and versatile to me.",
      "parentUuid": "52ba8bf4_a2d50912",
      "range": {
        "startLine": 142,
        "startChar": 27,
        "endLine": 142,
        "endChar": 38
      },
      "revId": "aeb2757b849f5dc63c92442cfd187c733edf8477",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1420e468_3bb44262",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 301552
      },
      "writtenOn": "2020-12-02T16:30:24Z",
      "side": 1,
      "message": "okay I see your point, I changed this and now it\u0027s in fact searching the way you described such that we don\u0027t search from (0,end). Follow up also doesn\u0027t create any RefCursors, too.\n\nPTAL :)",
      "parentUuid": "4099d6bc_08f44abe",
      "range": {
        "startLine": 142,
        "startChar": 27,
        "endLine": 142,
        "endChar": 38
      },
      "revId": "aeb2757b849f5dc63c92442cfd187c733edf8477",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa127643_f607e154",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 301552
      },
      "writtenOn": "2020-12-07T09:47:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1420e468_3bb44262",
      "range": {
        "startLine": 142,
        "startChar": 27,
        "endLine": 142,
        "endChar": 38
      },
      "revId": "aeb2757b849f5dc63c92442cfd187c733edf8477",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}