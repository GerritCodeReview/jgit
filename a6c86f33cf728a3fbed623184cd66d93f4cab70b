{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1be6d6a0_7f6b9693",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-13T07:15:13Z",
      "side": 1,
      "message": "Thanks!\nBased on your suggestions, the code of GraphCommitData looks a lot easier to understand.\n\nRegards,\nKyle",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e985134_5e06769e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "Arrays#copyOf can simplify the code in couple places.\n\nI think that @simon comment about number of commits we store is really important, but we can tackle it in a following change (we have tests to rework the code safely).",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b088090f_cf57ce1a",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 18,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-13T15:52:12Z",
      "side": 1,
      "message": "Add a test that successfully builds a CommitGraph.",
      "range": {
        "startLine": 18,
        "startChar": 13,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87ce2272_b25764a3",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 18,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "Creating successfully a graph is covered with other tests tests: CommitGraphLoaderTest with a cgit graph and CommitGraphTest with JGit-generated graph).\n\nThis builder is merely a holder of data for the specific classes inside CommitGraphV1 and its only logic is detecting duplicated/missing chunks, which are tested here.\n\nAll in all, I think we have reasonable covered the builder, what do you think?",
      "parentUuid": "b088090f_cf57ce1a",
      "range": {
        "startLine": 18,
        "startChar": 13,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d88ae8_b9f53c3a",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 18,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-14T09:56:41Z",
      "side": 1,
      "message": "I still believe that a test method that verifies the correct behavior is advantageous because it makes later refactoring easier.",
      "parentUuid": "87ce2272_b25764a3",
      "range": {
        "startLine": 18,
        "startChar": 13,
        "endLine": 18,
        "endChar": 36
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aee5243e_1eacb721",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphLoaderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 25,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-13T15:52:12Z",
      "side": 1,
      "message": "Write test cases that trigger the exceptions in CommitGraphLoader.",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d07a40f_c71475f9",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphLoaderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 25,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "We could add some test passing raw byte[] { commit-graph header } and byte[] { random bytes}.\n\nOverall, I am reasonably convinced that we generate valid commit-graphs and we are able to read them. We can always tighten the testing in following CLs (patches welcome!).",
      "parentUuid": "aee5243e_1eacb721",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77c8c025_ae1b64cc",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphLoaderTest.java",
        "patchSetId": 36
      },
      "lineNbr": 25,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-14T09:56:41Z",
      "side": 1,
      "message": "We should at least test how the CommitGraphLoader reacts when it reads a commit-graph with unknown chunks (since the current implementation of c-git writes chunks that this java implementation does not understand).",
      "parentUuid": "5d07a40f_c71475f9",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "615ca5fc_ca6ed18b",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphTest.java",
        "patchSetId": 36
      },
      "lineNbr": 199,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-13T15:52:12Z",
      "side": 1,
      "message": "NIT: Rename to writeAndReadCommitGraph",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 22
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9946fa3a_e705a582",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphTest.java",
        "patchSetId": 36
      },
      "lineNbr": 199,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-14T03:12:21Z",
      "side": 1,
      "message": "Great eyes! \nDone.",
      "parentUuid": "615ca5fc_ca6ed18b",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 22
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aca65936_bdd4a6b9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilder.java",
        "patchSetId": 36
      },
      "lineNbr": 32,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-13T15:52:12Z",
      "side": 1,
      "message": "We should switch to two-dimensional arrays for both oidLookup and commitData.\n\nThe dimensions for the arrays should be the same as specified by the spec (found here: https://git-scm.com/docs/gitformat-commit-graph#_chunk_data)\n\nbyte[N][H] oidLookup; \nbyte[N][H+16] commitData; \n//N :\u003d Number of commits, H :\u003d Bytes for commit OIDs (20 bytes for SHA-1)\n\nAccording to the spec around 1.8 billion commits can be stored in the commit-graph implementation of c-git. \n\nIn the current implementation (with one-dimensional byte arrays) the bottleneck is commitData. With SHA-1 every commit needs 36 bytes. Since the maximum number of elements in a java array is Integer.MAX_VALUE-8, we can only read around 60 million commits ( 2147483639 / 36). If we keep the one dimensional arrays this implementation can only read ~3% of the commits compared to the c-git implementation.\n\nUnfortunately a change here also requires changes in CommitGraphData, GraphObjectIndex and CommitGraphLoader.\n\nThe number of commits is further reduced when SHA-256 is used (since SHA-256 commitOIDs use 32 bytes instead of 20).",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "874c4438_7b0b2852",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilder.java",
        "patchSetId": 36
      },
      "lineNbr": 32,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "Great catch! and well explained, thanks!\n\nNot sure if an entry per commit is the optimal implementation as we would pay an array reference per commit... but maybe something in between (big chunks) would give us the scale and the efficiency?\n\nI think we can still submit this change and work on that on a new one. Current code won\u0027t do anything wrong with a too-big commit-graph (it throws an exception and we can ignore the graph). Graph layout in memory is a discussion in its own (and an interesting one!), we can adjust it without breaking API and we have tests to refactor the code safely.",
      "parentUuid": "aca65936_bdd4a6b9",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "097a6260_88b8e598",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilder.java",
        "patchSetId": 36
      },
      "lineNbr": 32,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-14T03:12:21Z",
      "side": 1,
      "message": "Thanks!\n\nIt\u0027s a known issue, refer to [1].\n\nCgit uses mmap, so there is no such problem as JGit.\n\nAs an active open source repository that has been developed for nearly 30 years, Linux has less than 2 million commits. I\u0027m wondering if it\u0027s \"over-design\" for JGit if it\u0027s done like this from the beginning. \n\nbyte[N][H] oidLookup; \nbyte[N][H+16] commitData; \n\nSuch a structure makes us need at least one more search each time we look up.\n\nOf course, this does not mean that we will never consider the limitation of commit-graph reading, we can scale it in the future.\n\n\n[1] https://git.eclipse.org/r/c/jgit/jgit/+/182892/comments/db8916ac_2f9e43a4",
      "parentUuid": "874c4438_7b0b2852",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2036c40_354c8326",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphBuilder.java",
        "patchSetId": 36
      },
      "lineNbr": 32,
      "author": {
        "id": 307354
      },
      "writtenOn": "2022-12-14T09:56:41Z",
      "side": 1,
      "message": "I am fine with keeping it as it is, because I think Kyle is right - 60 million commits is enough for now. \n\nI also realized that only loading the commit data from the commit-graph for 1.8 billion commits will consume ~62GiB of memory. Whereas the current implementation will \"only\" consume ~68MiB for the commit data of 60 million commits.\n\nIf we really want to support 1.8 billion commits we probably have to give up on reading the whole graph into memory.",
      "parentUuid": "097a6260_88b8e598",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99d378ad_bc7d36a7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 106,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "We don\u0027t use the \"4\" convention in naming, \"findParentsForOctopusMerge\" or \"findAllParents\" would work.",
      "range": {
        "startLine": 106,
        "startChar": 15,
        "endLine": 106,
        "endChar": 39
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3075f209_1fb8a754",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 106,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-14T03:12:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99d378ad_bc7d36a7",
      "range": {
        "startLine": 106,
        "startChar": 15,
        "endLine": 106,
        "endChar": 39
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62399874_79cee401",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 123,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "I think here you can just copy pList.length elements (otherwise you add one extra). If so, then probably you can just do: \npList \u003d Arrays.copyOf(pList, pList.length+32)\n\n(IIRC we have a test case for this, so it should be easy to verify it is still doing the right thing)",
      "range": {
        "startLine": 123,
        "startChar": 39,
        "endLine": 123,
        "endChar": 44
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a361ef74_59599106",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 123,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-14T03:12:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62399874_79cee401",
      "range": {
        "startLine": 123,
        "startChar": 39,
        "endLine": 123,
        "endChar": 44
      },
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "305b0358_fad689a6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 132,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-13T18:01:05Z",
      "side": 1,
      "message": "I think here you can just do \nreturn Arrays.copyOf(pList, count);",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1c87d6c_0027e126",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/GraphCommitData.java",
        "patchSetId": 36
      },
      "lineNbr": 132,
      "author": {
        "id": 304466
      },
      "writtenOn": "2022-12-14T03:12:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b0358_fad689a6",
      "revId": "a6c86f33cf728a3fbed623184cd66d93f4cab70b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}