{
  "comments": [
    {
      "key": {
        "uuid": "c559e768_4301e2f6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-12-02T14:38:44Z",
      "side": 1,
      "message": "We could save this exception for later inspection/re-throwing? That will add overhead to a lot of FileSnapshots that expect to hit this exception, but maybe that can be offset by skipping currently duplicated work where we probably re-do this existence check?",
      "range": {
        "startLine": 267,
        "startChar": 11,
        "endLine": 267,
        "endChar": 24
      },
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e7508e_27cdbfe7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-12-02T15:26:59Z",
      "side": 1,
      "message": "I don\u0027t understand what we would gain by saving this exception, RefDirectory.scanRef line 1111 tries to read the loose ref at a different time and anything could happen in between.",
      "parentUuid": "c559e768_4301e2f6",
      "range": {
        "startLine": 267,
        "startChar": 11,
        "endLine": 267,
        "endChar": 24
      },
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93493a3_7c5fb2b2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-12-02T16:30:17Z",
      "side": 1,
      "message": "We could use it to address the case #3 I added to your comment on RefDirectory.",
      "parentUuid": "f1e7508e_27cdbfe7",
      "range": {
        "startLine": 267,
        "startChar": 11,
        "endLine": 267,
        "endChar": 24
      },
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "479d0372_0fc727af",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-11-29T23:37:20Z",
      "side": 1,
      "message": "I think this could bypass the throw that happens on 1114 since we also get to this case from an IOException.",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02db2a5b_67287e3e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 44628
      },
      "writtenOn": "2021-11-30T08:16:05Z",
      "side": 1,
      "message": "That\u0027s true. 1114 seems to handle the case of an existing but inaccessible file; it was added in If4a94217fb5b7cfd4c04d881902f3e86193c7008. I don\u0027t quite understand under what conditions this can occur. BTW, see below.",
      "parentUuid": "479d0372_0fc727af",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9433452_b924d629",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-12-02T11:08:01Z",
      "side": 1,
      "message": "there are multiple cases where this can happen\n\n- missing file permissions\n- incompatible read vs. read/write open modes\n- filesystem locking\n- temporary lack of resources (e.g. too many open files)\n\nsee I03c6f6891de3c343d3d517092eaa75dba282c0cd",
      "parentUuid": "02db2a5b_67287e3e",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32e4d8c9_9094ecce",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-12-02T15:26:59Z",
      "side": 1,
      "message": "looks like there are 2 cases:\n\n1. the file exists when line 1106 is executed, reading from it in 1111 can fail for any of the reasons mentioned above or if the file disappeared until we reach line 1111, due to a race.\n\n2. the file does not exist when line 1106 is executed but could exist again in line 1111, due to a race, if we wouldn\u0027t return null in line 1107.\n\nI think case 2 shouldn\u0027t cause new issues since the same problem could occur without this change if the timing of the race is slightly different",
      "parentUuid": "e9433452_b924d629",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af151c33_fef302a0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 1541
      },
      "writtenOn": "2021-12-02T16:30:17Z",
      "side": 1,
      "message": "\u003e looks like there are 2 cases:\n\u003e \n\u003e 1. the file exists when line 1106 is executed, reading from it in 1111 can fail for any of the reasons mentioned above or if the file disappeared until we reach line 1111, due to a race.\n\nI\u0027m not worried about the race because that\u0027s not new behavior.\n\n\u003e \n\u003e 2. the file does not exist when line 1106 is executed but could exist again in line 1111, due to a race, if we wouldn\u0027t return null in line 1107.\n\u003e \n\u003e I think case 2 shouldn\u0027t cause new issues since the same problem could occur without this change if the timing of the race is slightly different\n\nCase 3 is the issue:\n\n3. the file fails for the reasons above when line 1106 is executed, but we return null on 1107 instead of re-throwing the exception like we would on 1114.",
      "parentUuid": "32e4d8c9_9094ecce",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f579a2df_4ca3616b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1107,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-12-02T23:11:33Z",
      "side": 1,
      "message": "In the FileSnapshot constructor in line 266 we read the file\u0027s attributes here in line 1111 we read the file content. At least on Linux according to [1] no permissions on the file are needed to read the file attributes using stat but read permission is required to read the file content. Hence I am not sure if it would be correct to throw the saved IOException which might have occurred in FileSnapshot() and throw it here. If missing file permissions are causing FileNotFoundException in 1112 then this wouldn\u0027t cause an IOException in FileSnapshot().\n\n[1] https://man7.org/linux/man-pages/man2/lstat.2.html",
      "parentUuid": "af151c33_fef302a0",
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e49917f1_4a49ec00",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1113,
      "author": {
        "id": 44628
      },
      "writtenOn": "2021-11-30T08:16:05Z",
      "side": 1,
      "message": "Could be simplified to path.isFile(). No need to query file attributes twice.",
      "range": {
        "startLine": 1113,
        "startChar": 7,
        "endLine": 1113,
        "endChar": 37
      },
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73533722_c99acc6e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 1
      },
      "lineNbr": 1113,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-12-02T11:08:01Z",
      "side": 1,
      "message": "yep File.isFile() checks if the file exists and is a normal file\n\nsee https://docs.oracle.com/javase/8/docs/api/java/io/File.html#isFile--",
      "parentUuid": "e49917f1_4a49ec00",
      "range": {
        "startLine": 1113,
        "startChar": 7,
        "endLine": 1113,
        "endChar": 37
      },
      "revId": "efaeee139bade33f2ddfccc70af971a5fbcb6a83",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}