{
  "comments": [
    {
      "key": {
        "uuid": "AAAAA3///Vk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Given the work being done by Sasa Zivkov to translate messages coming out of the JGit library, we shouldn\u0027t be doing this.\n\nIf the caller needs to know this type of exception from other exceptions, this needs to be a custom exception type that they can catch with a try-catch block.  If the caller shouldn\u0027t need to handle this exception differently from other exceptions we throw, this message should simply be private to the package, with possibly a translation for presentation.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///N0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "I tried back and forth and finally came to the conclusion that we need something more for our exception handling. I invented Exceptions for prominent error situations which can happen with the new API and which are not covered by the existing exceptions. I also added, after some other trials, a JGitInternalException class. Whenever during command execution I receive exceptions on which a caller of our API can\u0027t react properly (e.g. low-level IOExceptions) I wrap them into a JGitInternalException. This should make our method signatures smaller and a user doesn\u0027t have to catch \u003cn\u003e exceptions which he all doesn\u0027t understand and which all lead to the same handling (throwing and error message)\nSee the javadoc of JGitInternalException",
      "parentUuid": "AAAAA3///Vk\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Vg\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "s/run/call/",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Nw\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///Vg\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Vc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "s/run/call/",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Ns\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///Vc\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "See my remarks below, we shouldn\u0027t reset the time.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Nk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VI\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VE\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "See my remarks below, we shouldn\u0027t reset the time.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Ng\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VE\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VA\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "This call is pointless.  We\u0027re about to discard the Commit object, and all you really needed was that commitId anyway.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///No\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "removed this line",
      "parentUuid": "AAAAA3///VA\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VY\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Style-nit: I think I would prefer this to be defined as:\n\n  public CommitCommand setCommitter(String name, String email) {\n    return setCommitter(new PersonIdent(name, email));\n  }",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Nc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VY\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VQ\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 237,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "No.  If the caller gave us a PersonIdent, we should use that timestamp *exactly*.  The only time we should compute the timestamp on the fly is when we are creating the PersonIdent on behalf of the caller, e.g. because they used the setCommitter(name, email) overload, or because they allowed committer to be null and we\u0027re computing it during call() from the repository data.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///NY\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 237,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VQ\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VU\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Style-nit: Same as with setCommitter(name, email) overload.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///NU\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VU\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///VM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Same issue as committer timestamp, we should be using exactly what is recorded in the PersonIdent.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///NQ\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///VM\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Vs\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "s/run/call/",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///NM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///Vs\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Vo\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "s/run/call/",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///NI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///Vo\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///U0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Unused, since add(boolean, ObjectId) below enqueues directly into the RevWalk.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///M0\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "this field was removed",
      "parentUuid": "AAAAA3///U0\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Uw\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Always true since start is never assigned.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Mw\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "objectId was removed",
      "parentUuid": "AAAAA3///Uw\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Us\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "This default is a great idea.  Unfortunately it doesn\u0027t work because start is never assigned, so its always triggering.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Ms\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "objectId was removed",
      "parentUuid": "AAAAA3///Us\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///U8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Well, its technically an iteration of RevCommits, not a list.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Mo\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///U8\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Uo\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Should we be reusing the walk we\u0027ve already setup?  Why create a new pool of revision objects when we can just reuse the one we already have?\n\nOn the other hand, a walker could dispose of object bodies, and a reset and reuse might confuse the caller because the bodies are gone.  That\u0027s actually a bug in RevWalk that we should probably address and fix there rather than forcing an entire new pool to be created for a second invocation.\n\nLikewise, RevWalk discards the starting commits when it resets.  We probably should allow those to be retained somehow, so the same walk can be executed again without needing to maintain our own copy of the starting points (RevWalk calls them \"roots\" inside of itself.)\n\nFinally, RevWalk\u0027s implementation of Iterable is probably wrong.  It only works once.  Creating a 2nd Iterator fails.  So we probably should fix RevWalk first so its iterator() method resets the walk and starts it over again.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Mk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Your comments here and also the comments on PersonIdent\u0027s in CommitCommand make me think that it is maybe not so good to really allow multiple invocations of call() on a command. Some options (e.g. PersonIdents) don\u0027t make sense to be reused multiple times. Also coding wise it makes it complicated. If you set a field to it\u0027s default value during the first invocation, how to determine whether the field was ever set explicitly during the second invocation to call(). \n\nAnother problem are return values. If we dissallow multiple invocations on one instance we can more easily. Imagine RevWalks: I can easily write a command which has one RevWalk as field and which call() method returns this field. But this is not possible anymore if we have multiple invocations and for the first invocation you are still walking through the results and for the second invocation you start adding options (which will try to modify the RevWalk already passed to the caller).\n\nIf we want to be able to reuse a preconfigured command object for multiple command invocations we (which I guess happens seldomly) we could even just provide a clone() method which allows to create a copy of your template command before you call call(). \n\nMy next proposal will tell at least in the javadoc not to call call() twice.\n\nThe specific problem on which you comment here is solved. Have only one revwalk instance which I\u0027ll populate during the add(), not() ,... methods and which I will directly return in this method.",
      "parentUuid": "AAAAA3///Uo\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Uk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Actually, any use of ObjectId as a parameter probably should be AnyObjectId instead.  This permits the mutable variant to be passed in.  Normally that might be a problem, since the caller can change its value after we return.  But it shouldn\u0027t be an issue here, because we\u0027re doing a lookup of the object in the RevWalk and holding onto the located result.  So we\u0027re copying the value we were given, which makes it OK to take the MutableObjectId variant.",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Mg\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "As I said, my next proposal disallows multiple invocations with one command instance. In this case ObjectID is ok, you don\u0027t have the need to specify mutable options which can be altered during invocations.",
      "parentUuid": "AAAAA3///Uk\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///U4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1
      },
      "writtenOn": "2010-04-26T15:15:55Z",
      "side": 1,
      "message": "Should be {@code since..until}",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAA3///Mc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/api/LogCommand.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 5
      },
      "writtenOn": "2010-04-27T20:41:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAA3///U4\u003d",
      "revId": "de7705ebf54ac68cc4480eda51fd36caf80658a1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}