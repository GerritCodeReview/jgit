{
  "comments": [
    {
      "key": {
        "uuid": "a7c23755_2fbafd27",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/ObjectDirectoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 925
      },
      "writtenOn": "2017-01-14T10:42:53Z",
      "side": 1,
      "message": "I would put the expected fail case in a separate test method.",
      "range": {
        "startLine": 193,
        "startChar": 2,
        "endLine": 202,
        "endChar": 3
      },
      "revId": "e13944e6a44427291a0bac94aa5a8e7b97e3888d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_4fc499a7",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/ObjectDirectoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 925
      },
      "writtenOn": "2017-01-14T10:42:53Z",
      "side": 1,
      "message": "This would be cleaner with ExpectedException, i.e. declare at class scope:\n\n public ExpectedException expectedEx \u003d ExpectedException.none();\n\nand in the test method:\n\n expectedEx.expect(IOException.class);\n dir.getShallowCommits();\n\nit would also be possible to assert on the exception message:\n\n expectedEx.expect(IOException.class);\n expectedEx.expectMessage(\"Bad shallow line: X3148f9410b071edd4a4c85d2a43d1fa2574b0d2\");\n dir.getShallowCommits();\n\nthe test will then fail if the exception is not raised with the correct message, and the call to Assert.fail() is not needed.",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 202,
        "endChar": 3
      },
      "revId": "e13944e6a44427291a0bac94aa5a8e7b97e3888d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}