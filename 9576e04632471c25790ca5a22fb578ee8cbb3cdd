{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d8272d3c_a82ccc85",
        "filename": "org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 241433
      },
      "writtenOn": "2021-10-11T10:16:15Z",
      "side": 1,
      "message": "did you mean: \"commit-graph generation\"?",
      "range": {
        "startLine": 144,
        "startChar": 44,
        "endLine": 144,
        "endChar": 67
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b287a11b_f75e6e93",
        "filename": "org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 241433
      },
      "writtenOn": "2021-10-11T10:16:15Z",
      "side": 1,
      "message": "nit: \"commit graph\" for consistency with the other messages",
      "range": {
        "startLine": 144,
        "startChar": 44,
        "endLine": 144,
        "endChar": 56
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47348522_d96215be",
        "filename": "org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Done.\nI just wanted to say commit-graph writing was canceled.\nOn second thought, commit-graph might be a better fit, so I changed other \"commit graph\" to \"commit-graph\" to distinguish it from the DAG of commit.",
      "parentUuid": "b287a11b_f75e6e93",
      "range": {
        "startLine": 144,
        "startChar": 44,
        "endLine": 144,
        "endChar": 56
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dfed373_da9c1dbb",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 241433
      },
      "writtenOn": "2021-10-11T10:16:15Z",
      "side": 1,
      "message": "Can you add a note explaining where this number comes from?",
      "range": {
        "startLine": 28,
        "startChar": 45,
        "endLine": 28,
        "endChar": 47
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba5fd8b6_93e1b94d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "7dfed373_da9c1dbb",
      "range": {
        "startLine": 28,
        "startChar": 45,
        "endLine": 28,
        "endChar": 47
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0195e465_5bcd81c1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 241433
      },
      "writtenOn": "2021-10-11T10:16:15Z",
      "side": 1,
      "message": "Can you add a note explaining where this number comes from?",
      "range": {
        "startLine": 30,
        "startChar": 45,
        "endLine": 30,
        "endChar": 47
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2404d8d2_5b0dd129",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0195e465_5bcd81c1",
      "range": {
        "startLine": 30,
        "startChar": 45,
        "endLine": 30,
        "endChar": 47
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b3886c_663cee57",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-10-15T21:43:07Z",
      "side": 1,
      "message": "its",
      "range": {
        "startLine": 42,
        "startChar": 52,
        "endLine": 42,
        "endChar": 56
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee9769ca_1ed97c83",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-18T02:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1b3886c_663cee57",
      "range": {
        "startLine": 42,
        "startChar": 52,
        "endLine": 42,
        "endChar": 56
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69820589_8b4515f2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphOutPutStream.java",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-10-15T21:43:07Z",
      "side": 1,
      "message": "OutPut looks odd, CommitGraphOutputStream seems easier to understand",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 36
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5c8d6c5_61f78375",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphOutPutStream.java",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-18T02:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69820589_8b4515f2",
      "range": {
        "startLine": 28,
        "startChar": 13,
        "endLine": 28,
        "endChar": 36
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e724041_bb748267",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphOutPutStream.java",
        "patchSetId": 9
      },
      "lineNbr": 72,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-10-15T21:43:07Z",
      "side": 1,
      "message": "I\u0027d move incrementing count after line 84 otherwise count would be incremented already in case of the monitoring canceling the write or an IOException thrown by out.write",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f40f4d9c_59149537",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphOutPutStream.java",
        "patchSetId": 9
      },
      "lineNbr": 72,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-18T02:26:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e724041_bb748267",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b22b4171_5ba000d3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T18:43:11Z",
      "side": 1,
      "message": "It would be great if some of these larger functions were further broken up to paint a better high level picture. For example, perhaps this would look something vaguely like:\n\n createChunks();\n writeHeader();\n writeChunkLookup()\n writeChunks();\n writeDigest();\n\nAs this might lead to quite a few more functions, perhaps a few extra classes are merited also, should some of the generation number stuff live in a separate file?",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8974152_ef835225",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Nice idea.\nBut I haven\u0027t figured out a better way to break up this function yet because of some temporary variables.\nMaybe we can fix it when it gets more complicated?",
      "parentUuid": "b22b4171_5ba000d3",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "896e5b6f_5a4008a2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-13T20:16:01Z",
      "side": 1,
      "message": "\u003e But I haven\u0027t figured out a better way to break up this function yet because of some temporary variables.\n\nHmm, I only see method level variables. hashsz is effectively a constant. writeCount and ChunkOffset are each only used by one step. That leaves numChunks which can easily be passed around. Am I missing something?\n\nWhat I have found is that if you don\u0027t want to pass around variables (which I agree is a good thing, even for one variable sometimes), you can resolve this by creating a small inner class which holds the variables you don\u0027t want to pass down, and move the methods using them to that inner class. This results in much easier to read code.\n\n\u003e Maybe we can fix it when it gets more complicated?\n\nI think it\u0027s already very complicated. I think we have way too much code like this already in jgit and I don\u0027t think we should add any more.",
      "parentUuid": "a8974152_ef835225",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6d32fe_f7c34b98",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-14T05:04:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "896e5b6f_5a4008a2",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d7e842b_f1177e60",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 158,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-13T20:16:01Z",
      "side": 1,
      "message": "Define variables as late as possible, i.e. line 192 for this one.",
      "range": {
        "startLine": 158,
        "startChar": 7,
        "endLine": 158,
        "endChar": 18
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d1b6733_f045bd64",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 158,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-14T05:04:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d7e842b_f1177e60",
      "range": {
        "startLine": 158,
        "startChar": 7,
        "endLine": 158,
        "endChar": 18
      },
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd72d91_6aa99d56",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 462,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T18:43:11Z",
      "side": 1,
      "message": "These are referred in the code as chunks, perhaps that should be the class name (drop the Info)?",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bbb20e2_04cb54b2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 462,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fd72d91_6aa99d56",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54218a2a_131cb52b",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T18:43:11Z",
      "side": 1,
      "message": "Use Optionals for the APIs that can return null?",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66ebdc56_774e446c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "There is an option in ObjectReader.\nIf core.commitgraph is false, then ObjectReader will not read the commit-graph file.\nSee [1].\n\n[1] https://git.eclipse.org/r/c/jgit/jgit/+/183079/7/org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectReader.java",
      "parentUuid": "54218a2a_131cb52b",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a58b27b_7846d555",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-13T20:32:06Z",
      "side": 1,
      "message": "\u003e There is an option in ObjectReader.\n\u003e If core.commitgraph is false, then ObjectReader will not read the commit-graph file.\n\u003e See [1].\n\u003e \n\u003e [1] https://git.eclipse.org/r/c/jgit/jgit/+/183079/7/org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectReader.java\n\nI\u0027m not sure how this relates to my comment. I was referring to doing something like this:\n\n Optional\u003cCommitData\u003e getCommitData()\n\nso that we don\u0027t introduce new APIs that return null. Optionals were introduced as an alternative safer practice than returning nulls.",
      "parentUuid": "66ebdc56_774e446c",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a304cbea_4997bc47",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-14T05:04:58Z",
      "side": 1,
      "message": "Gotcha. I thought by mistake \"options\" you told was a Git config that makes the API always return null.",
      "parentUuid": "2a58b27b_7846d555",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dcdd2a8_f4b97656",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-08T18:43:11Z",
      "side": 1,
      "message": "Should this (or a potential superclass of this) potentially be designed in a way that a RevCommit could implement it?",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8435fd59_fd312e46",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-13T05:35:13Z",
      "side": 1,
      "message": "Personally, I don\u0027t think so.\nCommit-Graph simply makes commit headers parse faster, and it\u0027s not a new type of RevCommit.\nBy the way, rewriting revwalk.parseheaders() instead of implement superclass also keeps us from changing too much code.",
      "parentUuid": "8dcdd2a8_f4b97656",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f95792b_2aebafd3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 5082
      },
      "writtenOn": "2021-10-13T20:32:06Z",
      "side": 1,
      "message": "Even if we keep separate objects, is there a reason we would not want a single Commit interface in jgit, one that can live outside of CommitGraph and RevWalking code? I have found it to always be a sore spot in jgit that we can only talk about commits when using a RevWalker. This new use case shows that there are use cases for Commits beyond RevWalking.",
      "parentUuid": "8435fd59_fd312e46",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c43b1060_0c35c2e5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-14T05:04:58Z",
      "side": 1,
      "message": "I prefer to use revwalk to get a single Commit, such like revWalk.parseCommit(objectId).\nThat way, you can always get the results you want with or without a commit-graph.\n\nIf we directly get RevCommit from CommitGraph, there are a number of things we need to consider:\n1. Repo may not have commit-graph.\n2. Repo has a commit-graph, but the commit we want may not be in the commit-graph.\nIn this case, we still need to get a commit from RevWalk and search it in packs or loose objects.",
      "parentUuid": "1f95792b_2aebafd3",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a700b5c6_d13d8238",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-14T05:29:24Z",
      "side": 1,
      "message": "mistake: \n\u003e I prefer to use revwalk to get a single Commit, such like revWalk.parseCommit(objectId).\n\n   revWalk.parseCommit(objectId)\nto \n\n   RevCommit commit \u003d revWalk.lookupCommit(objectId);\n   revWalk.parseHeaders(commit);",
      "parentUuid": "c43b1060_0c35c2e5",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8a10b32_8404e2f1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CommitGraph.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-10-26T23:23:03Z",
      "side": 1,
      "message": "To be consistent we should know which sources were used to parse a commit, since both commit graph and pack has data other source don\u0027t know about. Let\u0027s allow 2 types of commit parsing in any order and mark a commit once we parsed it.",
      "parentUuid": "a700b5c6_d13d8238",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2ed9fa9_5c34c579",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/ConfigConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 773,
      "author": {
        "id": 4
      },
      "writtenOn": "2021-10-15T21:43:07Z",
      "side": 1,
      "message": "Why is this needed ? C git doesn\u0027t seem to support this.",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7699683_23986da3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/ConfigConstants.java",
        "patchSetId": 9
      },
      "lineNbr": 773,
      "author": {
        "id": 304466
      },
      "writtenOn": "2021-10-18T02:26:46Z",
      "side": 1,
      "message": "In CGit, commit-graph was introduced in version 2.18[1], but generation number values were computed in version 2.19[2]. Although jgit does not have such a process, it still needs to be compatible with the commit-graph generated by CGit 2.18, so I created such a config for debug.\n\n[1] https://github.com/git/git/commit/08fd81c9b6495a395a527985d18aa51c4ae66cdc\n[2] https://github.com/git/git/commit/3258c66332abaf6e3e8fd81cab07ae804760cd08",
      "parentUuid": "f2ed9fa9_5c34c579",
      "revId": "9576e04632471c25790ca5a22fb578ee8cbb3cdd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}