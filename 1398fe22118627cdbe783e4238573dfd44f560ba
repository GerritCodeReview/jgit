{
  "comments": [
    {
      "key": {
        "uuid": "ab126a23_d095c1c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-24T14:45:45Z",
      "side": 1,
      "message": "I would not mention the bug in brackets. He\u0027s listed already in the message. But tell what you did like \u0027Fixed reporting submodules as deleted ...\u0027",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bfc052e_3cee5a43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-24T14:45:45Z",
      "side": 1,
      "message": "Just say\n  Bug: 467631",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 57
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a08e07c4_ff5410a1",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/IndexDiffSubmoduleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-24T14:45:45Z",
      "side": 1,
      "message": "You could avoid cloning. In fact the problem you solve is not related to cloning or transport. Just delete the submodule in the working tree of the original test repo and do the IndexDiff. Like:\n\n\t@Theory\n\tpublic void testUncheckedOutSubmodulesDoNotShowUp(IgnoreSubmoduleMode mode)\n\t\t\tthrows Exception {\n\t\trecursiveDelete(submodule_trash);\n\t\tIndexDiff indexDiff \u003d new IndexDiff(db, Constants.HEAD,\n\t\t\t\tnew FileTreeIterator(db));\n\t\tindexDiff.setIgnoreSubmoduleMode(mode);\n\t\tassertFalse(indexDiff.diff());\n\t}",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 126,
        "endChar": 2
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "047c846d_fed83b09",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/IndexDiffSubmoduleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 44628
      },
      "writtenOn": "2018-08-24T20:54:45Z",
      "side": 1,
      "message": "I disagree.\n\nFirst, recursiveDelete(submodule_trash) would also remove the modules/submodule directory, leaving only modules. That\u0027s not the state after a clone: after cloning, modules/submodule exists as an empty directory. With only modules, reporting the submodule as missing would even be correct.\n\nSecond, the problem as reported is that after a clone the working tree is not clean and JGit reports all submodules as missing, when it should not. Writing the test according to this is perfectly fine, and I prefer it over all kinds of shortcuts to simulate the same state. Doing a clone and then doing the index diff is exactly what we want to test here.",
      "parentUuid": "a08e07c4_ff5410a1",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 126,
        "endChar": 2
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d74b16fb_7e59f34f",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/IndexDiffSubmoduleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-27T09:50:10Z",
      "side": 1,
      "message": "Not sure whether its relevant because of your alternative fix: heres the draft I wrote\n\nNo problem keeping your tests. As long as the tests cover the new code I am happy. I also like this tests which try to reproduce exactly what users of JGit do (kind of integration tests).\n\nOn the other hand I like to have unit tests which work on JGit internals, run fast and test exactly the broken functionality without being dependent on unrelated code, like transport code. I looked at\nwhat you fixed in IndexDiff and tried to produce a minimal test which covers this situation. The test I proposed fails without your fix in IndexDiff and runs with your fix. That\u0027s because your fix is for a situation where it is irrelevant whether in the filesystem the submodule_trash folder exists or is just empty. In both cases worktreeiterator will be null in IndexDiff.\n\nSo why not have your tests and this test?",
      "parentUuid": "047c846d_fed83b09",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 126,
        "endChar": 2
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb1ae708_c4868ba5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-24T14:45:45Z",
      "side": 1,
      "message": "minor: in other parts of this file we describe with such comments the state we have reached at that line. So \u0027in index, not in workdir\u0027 is sufficient. Your new comment line could be copied before 506 because there we have reached the state \"and not a gitlink\"",
      "range": {
        "startLine": 503,
        "startChar": 6,
        "endLine": 503,
        "endChar": 63
      },
      "revId": "1398fe22118627cdbe783e4238573dfd44f560ba",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}