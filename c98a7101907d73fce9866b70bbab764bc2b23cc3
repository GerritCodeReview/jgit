{
  "comments": [
    {
      "key": {
        "uuid": "ab695433_55393bd5",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 121,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-13T23:47:20Z",
      "side": 1,
      "message": "externalize strings and use MessageFormat for string concatenation for i18n",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10d0396d_3230b3e9",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 121,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "ACK, should i rework all the commits in this series? or can we add some kind of clean-up / codereview commit on top (like done for unit tests now)?",
      "parentUuid": "ab695433_55393bd5",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6277ca65_2402ff68",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 121,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T18:42:36Z",
      "side": 1,
      "message": "I will do this and other review changes on top of all commits from this series before unit test commit, because then the messages are final and do not want waste more time with rebasing and conflict reloving. Is it ok?",
      "parentUuid": "ab695433_55393bd5",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65e4ade9_023a5d68",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 121,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-14T23:04:20Z",
      "side": 1,
      "message": "I\u0027d prefer if you do such improvements in place in the commit which needs to be improved. Otherwise you make code review more tedious which means it will take longer since reviewers have to take additional notes to remember what wasn\u0027t finished here in this commit but in another commit on top. And this increases likelihood that some of the comments slip through the cracks and some problems are left in the final code.\n\nI recommend to use interactive rebase [1] for such rewriting. As long as you do not reorder commits touching the same code section during an interactive rebase this should not introduce conflicts.\n\nIf you want to see a review which really went through many iterations look at Han-Wen\u0027s implementation of FileReftableDatabase [2]\n\n[1] https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\nhttps://wiki.eclipse.org/EGit/User_Guide#Interactive_Rebase\n[2] https://git.eclipse.org/r/#/c/146568/",
      "parentUuid": "6277ca65_2402ff68",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4842f618_30709db5",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 217,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-13T23:47:20Z",
      "side": 1,
      "message": "style nit: missing braces",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3596985e_ba362509",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 217,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4842f618_30709db5",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87cb365f_91cb3124",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/BooleanOption.java",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-13T23:47:20Z",
      "side": 1,
      "message": "this class looks pretty weird and seems to mix definition of a boolean option with setting a default",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0937bfa_5a4fbdd1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/BooleanOption.java",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "I\u0027ve reworked this calss now lot times after review comments. It looks like my idea about the enum usage is not streight forward for other developers. I\u0027m not convinced using two booleans is better. Please give me a hint how optional with default value can be implemented in Java here.",
      "parentUuid": "87cb365f_91cb3124",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e55a50_e9b41c9c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/BooleanOption.java",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T18:42:36Z",
      "side": 1,
      "message": "I\u0027m waiting for better alternative and will not change for next PS...",
      "parentUuid": "d0937bfa_5a4fbdd1",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e7a0e50_44094afb",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/DiffToolManager.java",
        "patchSetId": 20
      },
      "lineNbr": 24,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-13T23:53:14Z",
      "side": 1,
      "message": "I\u0027d call this simply DiffTools",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362263f7_b1b0f895",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/DiffToolManager.java",
        "patchSetId": 20
      },
      "lineNbr": 24,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e7a0e50_44094afb",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5dbf2c_ebd31633",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/DiffToolManager.java",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-13T23:47:20Z",
      "side": 1,
      "message": "fix TODOs ?",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26af4b49_ee9c32a4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/DiffToolManager.java",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "Because this is part of bigger change that cannot be done perfect stepo by step with small changes, it\u0027 a hint for next commit work what is planed to do. Will remove the comment...",
      "parentUuid": "ff5dbf2c_ebd31633",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14c4cd65_127b7822",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/DiffToolManager.java",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T18:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26af4b49_ee9c32a4",
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f1e6a97_dda815dd",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/ExternalDiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 24,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-14T00:08:02Z",
      "side": 1,
      "message": "empty interface methods not declared default are always abstract and interface methods are always public so these two modifiers can be omitted",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49e6312f_1b30ba5d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/ExternalDiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 24,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T09:12:07Z",
      "side": 1,
      "message": "ok, my foult, i\u0027m mainly C++ developer, will fix",
      "parentUuid": "5f1e6a97_dda815dd",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c834d5bd_78c072d0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/diffmergetool/ExternalDiffTool.java",
        "patchSetId": 20
      },
      "lineNbr": 24,
      "author": {
        "id": 159690
      },
      "writtenOn": "2020-01-14T18:42:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49e6312f_1b30ba5d",
      "range": {
        "startLine": 24,
        "startChar": 1,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "c98a7101907d73fce9866b70bbab764bc2b23cc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}