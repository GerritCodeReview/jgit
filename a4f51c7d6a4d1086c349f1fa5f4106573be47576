{
  "comments": [
    {
      "key": {
        "uuid": "AABOIn//0yg\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-10T20:27:10Z",
      "side": 1,
      "message": "Two javadocs?",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0qE\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-11T07:13:33Z",
      "side": 1,
      "message": "No. A mistake.",
      "parentUuid": "AABOIn//0yg\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0yc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-10T20:27:10Z",
      "side": 1,
      "message": "missing asterisk",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0qA\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-11T07:13:33Z",
      "side": 1,
      "message": "Nice. I need a better JavaDoc friendly comment inserter. Eclipse didn\u0027t complain. Staring at code too much. Starting to see stars where there are none :-(",
      "parentUuid": "AABOIn//0yc\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0q4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-10T20:27:10Z",
      "side": 1,
      "message": "If this is derivative work you may need to ask for permission to relicense the code from the authors of the original work",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0qI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-11T07:13:33Z",
      "side": 1,
      "message": "I am not clear on what constitutes a derivation. I think strictly speaking, all of JGit would be derivative.\n\nThis implementation is not the native \u0027C\u0027 version transcribed to Java. The concepts of multiple bases, object trees, references and various types of merges have already been enumerated in JGit. The idea of recursively merging trees is re-used and implemented by adapting existing JGit code, largely the ThreeWay and Resolve mergers, so I suppose I *should* mention those original authors and thank them for all their hard work.\n\nThe native git code is licenced GPL v.2. Who \"owns\" the native version recursive strategy code? Do I call Linus?",
      "parentUuid": "AABOIn//0q4\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0iM\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-11T22:05:07Z",
      "side": 1,
      "message": "With derivative work we mean something that is a translation of some kind of the original nontrivial code. Stealing the concepts and constants necessary for compatibility does not count (it could violate a patent but hopefully that is not the case). \n\nTo ask for permission to use the code you need to ask all the copyright holders. Basically you run git blame and git log on the code and extract the list of copyright holders. You can eliminate trivial changes, e.g. formatting. It\u0027s entirely possible to go that route if you ask nicely. Then that is only neccesary if we consider this derivative work.",
      "parentUuid": "AABOIn//0qI\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//z2Q\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-18T14:11:18Z",
      "side": 1,
      "message": "The original where I found the idea is GPL v2.2. Do I copy the GPL collateral in here too with the permissions?",
      "parentUuid": "AABOIn//0iM\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0h8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-11T22:05:07Z",
      "side": 1,
      "message": "re-format",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//z2M\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-18T14:11:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AABOIn//0h8\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0is\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 660,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-11T22:05:07Z",
      "side": 1,
      "message": "Removing anything but the last file from an arraylist is quite expensive for large lists. Though rare, we sometime have large changes and expect good performance. I haven\u0027t measured that here considering that we do IO here. On the other can using a LinkedList would remove the worries.",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//z2I\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 660,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-18T14:11:18Z",
      "side": 1,
      "message": "this copy is removed. Original in ResolveMerger would be subject to review, buut not repairable by me.",
      "parentUuid": "AABOIn//0is\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0iI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-11T22:05:07Z",
      "side": 1,
      "message": "Too much stuff is copied from the base class. Why should we review it again?",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//z2E\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-18T14:11:18Z",
      "side": 1,
      "message": "removed. Original re-used",
      "parentUuid": "AABOIn//0iI\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0q8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyRecursive.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 8
      },
      "writtenOn": "2012-10-10T20:27:10Z",
      "side": 1,
      "message": "A contributors list is hard to maintain so we avoid it.\ngit blame /log is the mail tool for finding authorship",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//0p8\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyRecursive.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 504
      },
      "writtenOn": "2012-10-11T07:13:33Z",
      "side": 1,
      "message": "Sure. Should I convert me to author or remain anonymous?",
      "parentUuid": "AABOIn//0q8\u003d",
      "revId": "a4f51c7d6a4d1086c349f1fa5f4106573be47576",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}