{
  "comments": [
    {
      "key": {
        "uuid": "AABOIn//+EI\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/SubscribeConnection.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 383
      },
      "writtenOn": "2012-07-25T00:53:19Z",
      "side": 1,
      "message": "In the normal smart HTTP implementation the extra requests to do authentication/advertisement are hidden inside the normal connecton implementation. Is there a reason you can\u0027t do that here?",
      "revId": "3be30d9dac8b71598571c94accfabacccafadf9a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//+D4\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/SubscribeConnection.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 383
      },
      "writtenOn": "2012-07-25T01:01:45Z",
      "side": 1,
      "message": "Hm, I suppose I see what\u0027s different. It\u0027s still the issue where a given user (anonymous or otherwise) might have access to some repos but not others, and you want to make sure you have access to all of them before continuing.\n\nWhat happens in the case where a user is authenticated and wants to subscribe to repos A and B, but only has access to A. Should the server tell the user *which* repos they have access to? In the general case, finding the largest set of repos to which the user has access seems like it would take O(2^n) requests...\n\n(Apologies if this is covered in the implementation I\u0027m about to read.)",
      "parentUuid": "AABOIn//+EI\u003d",
      "revId": "3be30d9dac8b71598571c94accfabacccafadf9a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//+Dk\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/SubscribeConnection.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 694
      },
      "writtenOn": "2012-07-25T01:04:27Z",
      "side": 1,
      "message": "This request requires an explicit argument (the subscriber, which contains the list of repositories). In the other cases, the repository is built into the URI so it doesn\u0027t need to be passed as an argument. I could make it an argument on Transport.openSubscribe(Subscriber)?\n\nThis function will still need to exist in some form on SubscribeConnection, because it speaks the pubsub protocol. Other implementations speak the abstract \"InfoRefs\" protocol so they can reuse authentication and HTTP protocol specific communication. doSubscribeAdvertisement doesn\u0027t do anything special for HTTP, and should probably be called by a few other protocols as well at the beginning of a connection.",
      "parentUuid": "AABOIn//+EI\u003d",
      "revId": "3be30d9dac8b71598571c94accfabacccafadf9a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOIn//+Cs\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/SubscribeConnection.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 694
      },
      "writtenOn": "2012-07-25T01:22:10Z",
      "side": 1,
      "message": "It will fail on the first repository that the user doesn\u0027t have access to...all of these repositories need to be part of existing git repository configs, so the user \"should\" already have access. There isn\u0027t any protocol for transmitting error messages back to the client.",
      "parentUuid": "AABOIn//+D4\u003d",
      "revId": "3be30d9dac8b71598571c94accfabacccafadf9a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}