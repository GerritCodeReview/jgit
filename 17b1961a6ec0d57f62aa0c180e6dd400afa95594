{
  "comments": [
    {
      "key": {
        "uuid": "a7fb1785_c2dc3206",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-23T15:49:16Z",
      "side": 1,
      "message": "why do you tick here? To be consistent with commit() or is there any requirement I don\u0027t see yet?",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_3dac3775",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-23T20:03:45Z",
      "side": 1,
      "message": "Yes, to be consistent with commit. Otherwise if you do:\n\n RevCommit c1 \u003d git.commit().create();\n Revcommit c2 \u003d git.cherryPick(c);\n RevCommit c3 \u003d git.commit().create();\n\nthen c2 and c1 would have the same timestamp.\n\nMaybe it would make more sense if cherryPick() returned a CommitBuilder? It would be a bit uglier because we would have to prepopulate the edit list, but then again we already do that for amend(). Thoughts?",
      "parentUuid": "a7fb1785_c2dc3206",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_0f014278",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-24T08:10:48Z",
      "side": 1,
      "message": "I would leave it as it is. It\u0027s test code and I like very much that you can cherry-pick in one line. Let\u0027s start making it complicated when we really need it.\n\nJust wanted to understand whether there is a hidden dependency that c2 and c1 must have different timestamps. I don\u0027t know whether we can guarantee that the commits c1,c2,c3 have different timestamps. With our TestRepository class we can guarantee because we control the clock. But in real life if the machine is fast enough and the clock is slow enough they may have the same timestamp, or?",
      "parentUuid": "a7fb1785_3dac3775",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_724549cb",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-24T12:30:31Z",
      "side": 1,
      "message": "Suppose c2 in my example were created with commit() instead of cherryPick(). In that case we would definitely have c1 \u003c c2 \u003c c3, because the default tick is 1. So that\u0027s what I meant by being consistent with commit().",
      "parentUuid": "a7fb1785_0f014278",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_42acc275",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-23T15:49:16Z",
      "side": 1,
      "message": "why is the committer of a cherry-pick not the default user. That would be more consistent with native git, or? Like in commit() you could use\n\n  new PersonIdent(defaultCommitter, new Date(now))",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_9db28bcc",
        "filename": "org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-23T20:03:45Z",
      "side": 1,
      "message": "Good idea, done.",
      "parentUuid": "a7fb1785_42acc275",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_82ad0a72",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-23T15:49:16Z",
      "side": 1,
      "message": "I would create a commit which has non-default Author and Committer. Then it would be more obvious that you are taking over the right idents.",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_9d644bc5",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-23T20:03:45Z",
      "side": 1,
      "message": "Done.\n\nI removed the check from cherryPickWithContentMerge as well.",
      "parentUuid": "a7fb1785_82ad0a72",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_c26f12ed",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 318,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-23T15:49:16Z",
      "side": 1,
      "message": "same test as 3 lines above",
      "range": {
        "startLine": 318,
        "startChar": 42,
        "endLine": 318,
        "endChar": 46
      },
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_bdb787ba",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 318,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-23T20:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7fb1785_c26f12ed",
      "range": {
        "startLine": 318,
        "startChar": 42,
        "endLine": 318,
        "endChar": 46
      },
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_2286d6f4",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 326,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-23T15:49:16Z",
      "side": 1,
      "message": "As commented in TestRepository class: i would have expected that the committer name/email is also copied.",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fb1785_7d5fdff2",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/junit/TestRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 326,
      "author": {
        "id": 383
      },
      "writtenOn": "2015-03-23T20:03:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7fb1785_2286d6f4",
      "revId": "17b1961a6ec0d57f62aa0c180e6dd400afa95594",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}