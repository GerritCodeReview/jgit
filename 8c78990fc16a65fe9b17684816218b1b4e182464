{
  "comments": [
    {
      "key": {
        "uuid": "d6183c1e_29cef4cb",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/FSTest.java",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T11:52:09Z",
      "side": 1,
      "message": "Debug code leftover?\n\nI believe we need a bit more testing on this though, such as that *IF* we create two files with a sleep in between of the resolution, they should have two different update timestamp.",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 228,
        "endChar": 46
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763c7883_c1f54b3a",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/FSTest.java",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-06T14:02:23Z",
      "side": 1,
      "message": "yes, leftover and needs more tests",
      "parentUuid": "d6183c1e_29cef4cb",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 228,
        "endChar": 46
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9680b8fa_1ce004be",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/FSTest.java",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-07T09:51:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "763c7883_c1f54b3a",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 228,
        "endChar": 46
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "792bd1e8_ecbbe92c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 5
      },
      "writtenOn": "2019-05-07T07:50:36Z",
      "side": 1,
      "message": "Why Duration.ZERO? For the current snapshot we may have already determined the timer resolution. Why don\u0027t we reuse that info for the new snapshot instance as in \"return new FileSnapshot(read, modified, -1, fsTimerResolution)\".\n\nImagine the following steps happen in the same slot of a filesystem timer: you modify a file, you create a filesnapshot on it, you call save(lastmodified), some external process modifies the file.\n\nIf later you ask for isModified() you fail to detect the modification\nbecause fsTimeStampResolution\u003d0.",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a823d957_3935bb38",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-07T09:51:27Z",
      "side": 1,
      "message": "I think this isn\u0027t possible since this is a static method and there is no way to find out which timer resolution to use if the observed file is unknown since there might be multiple filesystems and in this method we don\u0027t know which file is meant. If the caller knows the file it should use the other method save(File)\n\nThis method isn\u0027t used in jgit, egit and gerrit so I am not sure if it\u0027s used by anyone. Maybe we should deprecate it.",
      "parentUuid": "792bd1e8_ecbbe92c",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7be172e_c40bfe36",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 291,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T11:52:09Z",
      "side": 1,
      "message": "All the magic numbers here need a bit of commenting on why they have been chosen.",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 291,
        "endChar": 3
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "373f730b_55ce28f7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 291,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-06T14:02:23Z",
      "side": 1,
      "message": "I agree :-)",
      "parentUuid": "b7be172e_c40bfe36",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 291,
        "endChar": 3
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff611521_43925d9f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 291,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-07T09:51:27Z",
      "side": 1,
      "message": "see explanation in commit message",
      "parentUuid": "373f730b_55ce28f7",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 291,
        "endChar": 3
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24cfd053_6b908e8d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileSnapshot.java",
        "patchSetId": 6
      },
      "lineNbr": 291,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-08T20:21:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff611521_43925d9f",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 291,
        "endChar": 3
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcaf90a5_9dcb8702",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 5
      },
      "writtenOn": "2019-05-07T07:50:36Z",
      "side": 1,
      "message": "Have you thought about persisting the value in the repo config? \nFor long-running processes like gerrit, eclipse  what we have here is\nok. But if you use JGit with short living processes (e.g. calls to PGM, inside jenkins tasks) then we do the timer resolution detection over and over again.",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bef9411a_3721f637",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 190,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-07T09:51:27Z",
      "side": 1,
      "message": "Could make sense for short-lived processes. In case of migration to another filesystem or upgrading to another Java version the persisted timestamp resolution might become stale. E.g. if Java is upgraded from Java 8 to Java 11 on Mac using APFS according to my measurements the timer resolution shrinks from 1s to 5ms.\nSo if we persist timer resolution we should also persist filesystem type and Java version and only reuse the stored value if filesystem type and Java version didn\u0027t change.\n\nThough I think the repository configuration is not the right place to store filesystem timestamp resolution since typically many repositories are located in the same filesystem. We can try to store it in the user global git configuration, the system level configuration is probably read-only for most processes.\n\nI think this improvement should be implemented in another change. Could be implemented on top of manual configuration of timestamp resolution.",
      "parentUuid": "dcaf90a5_9dcb8702",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b986fdb5_6a200716",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T11:52:09Z",
      "side": 1,
      "message": "Do we need to log the exception at warning level? Otherwise it would be difficult to understand why the timestamp resolution detection isn\u0027t working.",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df440529_118225e0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-06T14:02:23Z",
      "side": 1,
      "message": "ok, I can add that",
      "parentUuid": "b986fdb5_6a200716",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a442713e_fa9fb32f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-07T12:49:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df440529_118225e0",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eddc804c_d82301c1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-08T20:21:51Z",
      "side": 1,
      "message": "Thanks, that helps.",
      "parentUuid": "a442713e_fa9fb32f",
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cabc0bd_30639187",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T11:52:09Z",
      "side": 1,
      "message": "What if we have no write access to the filesystem?\n(Scenario: a Gerrit slave running on a read-only file share)",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 26
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc97d3cc_13a81b8f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-06T14:02:23Z",
      "side": 1,
      "message": "I think if the filesystem is read-only there is no way to determine the timestamp resolution automatically from Java.\n\nWe could add new options to allow manual configuration: \n\n[filesystem \"/dev/disk1s1\"]\n    mountpath \u003d /\n    timestampResolution \u003d 5ms",
      "parentUuid": "9cabc0bd_30639187",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 26
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21bf0d57_183ba4fe",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T14:11:59Z",
      "side": 1,
      "message": "Yes, that\u0027s a very cool idea. On the Gerrit slaves the admin knows what are the \"right params\" and can set them out.",
      "parentUuid": "dc97d3cc_13a81b8f",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 26
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1235234e_a681d48f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-08T20:21:51Z",
      "side": 1,
      "message": "Is the manual configured timestampResolution addressed in a follow-up change?",
      "parentUuid": "21bf0d57_183ba4fe",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 26
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "480ff327_91c6f274",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-08T22:25:14Z",
      "side": 1,
      "message": "not yet done, but yes this should be done in a separate change",
      "parentUuid": "1235234e_a681d48f",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 26
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c0fc512_a1a8ab21",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 97483
      },
      "writtenOn": "2019-05-06T11:52:09Z",
      "side": 1,
      "message": "why 512?",
      "range": {
        "startLine": 234,
        "startChar": 21,
        "endLine": 234,
        "endChar": 24
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13596124_a8f3ad89",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-05-06T14:02:23Z",
      "side": 1,
      "message": "* I have no exhaustive list of file timestamp resolutions across the many filesystems existing so it\u0027s a guess based on what we found out so far\n* exponent of 2 ;-)\n* not too small to avoid unnecessary iterations\n* I didn\u0027t run any benchmark on the measuring code hence I don\u0027t know the size of systematic error introduced by the finite performance of the measuring code",
      "parentUuid": "3c0fc512_a1a8ab21",
      "range": {
        "startLine": 234,
        "startChar": 21,
        "endLine": 234,
        "endChar": 24
      },
      "revId": "8c78990fc16a65fe9b17684816218b1b4e182464",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}