{
  "comments": [
    {
      "key": {
        "uuid": "AABOPX//2sU\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1
      },
      "writtenOn": "2013-03-19T00:20:11Z",
      "side": 1,
      "message": "Even if this succeeds, the repository is now corrupt between here and the loop below finishing successfully. Unfortunately the Git experts have declared this is OK because the naming format for a file is flawed. *sigh*\n\nWhat you have is slightly better than before, but its still worrying.\n\nI don\u0027t have a good solution here. I have suggested Git rename these files to be based on a different SHA-1 computation, but that isn\u0027t going to happen anytime soon. I have also suggested all of these streams should be folded into a single stream, but that also won\u0027t happen anytime soon.",
      "revId": "58b4b362c47bb47b1d6f369427f937aebb22fdc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//2mc\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-03-19T13:31:01Z",
      "side": 1,
      "message": "This is still worrying, true. But it\u0027s also much better in my eyes. Without this fix we always ended up in a repo with no loose objects and no packfiles(!) at all when this rename fails. This method returned null instead of throwing an exception. Means to the caller: no packfile was written. And later, when deleting the packfiles which are now outdated, we deleted all existing packfiles except those which where newly written. Since no packfile was written if the rename files all packfiles got deleted.\n\nNow we don\u0027t get a corrupted repo always when the rename fails but only somebody pulls the plug between here and the and of the loop.",
      "parentUuid": "AABOPX//2sU\u003d",
      "revId": "58b4b362c47bb47b1d6f369427f937aebb22fdc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//2gY\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1
      },
      "writtenOn": "2013-03-19T17:10:24Z",
      "side": 1,
      "message": "And its actually still less bad than before. If the process does fail to rename the .idx into place at least the .pack is valid. A human can remove the .idx and run index-pack to make a new .idx file from the valid .pack.",
      "parentUuid": "AABOPX//2mc\u003d",
      "revId": "58b4b362c47bb47b1d6f369427f937aebb22fdc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//2YU\u003d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 5
      },
      "writtenOn": "2013-03-20T10:19:08Z",
      "side": 1,
      "message": "Yes, I agree on that.\n\nHas somebody thought about having all files which belong together (xyz.pack,xyz.idx,...) into a folder (xyz/pack, xyz/idx). Maybe then atomic renames are easier because we have to rename a single filesystem entity (although I don\u0027t have hope that the rename mess on windows becomes easier when we deal with non-empty folders).",
      "parentUuid": "AABOPX//2gY\u003d",
      "revId": "58b4b362c47bb47b1d6f369427f937aebb22fdc3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}