{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "05721d7e_394bd82c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 84,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-04-11T22:15:45Z",
      "side": 1,
      "message": "Can we standardize on how we spell \"object\" and \"index\"? I think we should just spell them out in full all the time.",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 48
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ea60959_04e674db",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 84,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-12T23:19:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05721d7e_394bd82c",
      "range": {
        "startLine": 84,
        "startChar": 38,
        "endLine": 84,
        "endChar": 48
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec56add_768c295e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 314,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-04-11T22:15:45Z",
      "side": 1,
      "message": "Would this ever not be true? objSizeIndex is checked for null at the start of this method.",
      "range": {
        "startLine": 314,
        "startChar": 7,
        "endLine": 314,
        "endChar": 25
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdaec00c_8925275e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 314,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-12T23:19:38Z",
      "side": 1,
      "message": "I copied the pattern of the other index loaders. \n\nI think it would be not null if two threads get to this method concurrently. They are \"serialized\" by the locking in #getOrLoadRef(), but the first sets the field, the second finds it non-null.\n\nThat being said, it is just overwriting a reference with the same value, so not sure what to do here. Follow other loaders pattern or rewrite the ref. Any suggestion?",
      "parentUuid": "2ec56add_768c295e",
      "range": {
        "startLine": 314,
        "startChar": 7,
        "endLine": 314,
        "endChar": 25
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc2b8059_f36ff90f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 314,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-18T21:34:40Z",
      "side": 1,
      "message": "Ok, I remove it as it doesn\u0027t really help anything.",
      "parentUuid": "cdaec00c_8925275e",
      "range": {
        "startLine": 314,
        "startChar": 7,
        "endLine": 314,
        "endChar": 25
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef3d6130_9438f207",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 318,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-04-11T22:15:45Z",
      "side": 1,
      "message": "I think it\u0027s better to bubble the exception up to avoid surprising behavior. As a comparison, above, we also throw if we fail to read the commit graph, which is also optional.",
      "range": {
        "startLine": 318,
        "startChar": 3,
        "endLine": 318,
        "endChar": 55
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b75b445_7c1d68cf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 318,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-12T23:19:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef3d6130_9438f207",
      "range": {
        "startLine": 318,
        "startChar": 3,
        "endLine": 318,
        "endChar": 55
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55bbb0f8_fcf9797e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 318,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-25T19:13:18Z",
      "side": 1,
      "message": "I realized that letting the exception pass means that callers of pack.getObjectSizeInfo() on a pack without index get an IOException in the first loading attempt and a null in the following, usually doing the same handling.",
      "parentUuid": "9b75b445_7c1d68cf",
      "range": {
        "startLine": 318,
        "startChar": 3,
        "endLine": 318,
        "endChar": 55
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53814289_8bb9dad4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 1025,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-04-11T22:15:45Z",
      "side": 1,
      "message": "I think this is an IllegalArgumentException, since it is the id that\u0027s wrong.",
      "range": {
        "startLine": 1025,
        "startChar": 13,
        "endLine": 1025,
        "endChar": 34
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6731f016_78c3b112",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackFile.java",
        "patchSetId": 13
      },
      "lineNbr": 1025,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-12T23:19:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53814289_8bb9dad4",
      "range": {
        "startLine": 1025,
        "startChar": 13,
        "endLine": 1025,
        "endChar": 34
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5f7533a_0c1017d0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsReader.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-04-11T22:15:45Z",
      "side": 1,
      "message": "So if it\u0027s below threshold, we always return true? What if the threshold is really high? (E.g. the threshold is 100k, the object is 50k, and we ask if it\u0027s less than 10k. This method would return true, but the answer is false.)",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 11
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b115927a_c67c0901",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsReader.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-12T23:19:38Z",
      "side": 1,
      "message": "Yes, that is the intention. \n\nThose false positives mean that if the client request only \"blobs under 10k\" and our threshold is 100k, we will send all (reachable) blobs under 100k. We are OK sending more objects if the filtering is faster.\n\nIf that is not acceptable or certain filters are very common (e.g. 10k) operators can adjust the indexing threshold.\n\nIf some code wants to get a precise object size and use the index if possible, it needs to use getIndexedObjectSize() and getObjectSize() if not found (and not this method).",
      "parentUuid": "e5f7533a_0c1017d0",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 11
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "621403d0_4afc7bd6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsReader.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-21T17:52:33Z",
      "side": 1,
      "message": "From offline conversation, we can make this accurate and not necessarily more expensive if we know the threshold in the index.\n\nI am working on it.",
      "parentUuid": "b115927a_c67c0901",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 11
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49528035_3de48980",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsReader.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-25T19:13:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "621403d0_4afc7bd6",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 11
      },
      "revId": "1b2a7ef9c86230cd235c53636435806f04e48f08",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}