{
  "comments": [
    {
      "key": {
        "uuid": "a7979753_e6869f6a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackedBatchRefUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 9
      },
      "writtenOn": "2017-12-15T12:46:17Z",
      "side": 1,
      "message": "locks can only be non-null if we entered the if block and reached the line between 187 and 188 :-). At that place it is also guaranteed to be non-null. Therefore, move this code below the line 187 and remove this check.",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "3f7c42806397da29680552e5e15edf4187ecda16",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_a67817e4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackedBatchRefUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 9
      },
      "writtenOn": "2017-12-15T12:52:20Z",
      "side": 1,
      "message": "Reading again my comment, looks like it is not precise enough. Basically, I was thinking about something like:\n\n  PackedRefList oldPackedList;\n  if (!refdb.isInClone()) {\n    locks \u003d lockLooseRefs(pending);\n    if (locks \u003d\u003d null) {\n      return;\n    }\n    oldPackedList \u003d refdb.pack(locks);\n  } else {\n    oldPackedList \u003d refdb.getPackedRefs();\n  }",
      "parentUuid": "a7979753_e6869f6a",
      "range": {
        "startLine": 189,
        "startChar": 33,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "3f7c42806397da29680552e5e15edf4187ecda16",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_c63e03e7",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 4
      },
      "lineNbr": 1208,
      "author": {
        "id": 44628
      },
      "writtenOn": "2017-12-15T09:04:02Z",
      "side": 1,
      "message": "What if head \u003d\u003d null? I presume we could consider that dangling, too? So I\u0027d return true here.",
      "revId": "3f7c42806397da29680552e5e15edf4187ecda16",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_064f2b40",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 4
      },
      "lineNbr": 1208,
      "author": {
        "id": 4
      },
      "writtenOn": "2017-12-15T09:56:33Z",
      "side": 1,
      "message": "I think that\u0027s not a valid repository, RepositoryCache.isGitRepository(File dir, FS) requires a valid HEAD to consider the directory a git repository, see\nhttps://git.eclipse.org/r/plugins/gitiles/jgit/jgit/+/stable-4.9/org.eclipse.jgit/src/org/eclipse/jgit/lib/RepositoryCache.java#453",
      "parentUuid": "a7979753_c63e03e7",
      "revId": "3f7c42806397da29680552e5e15edf4187ecda16",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7979753_e66dbf24",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 4
      },
      "lineNbr": 1212,
      "author": {
        "id": 9
      },
      "writtenOn": "2017-12-15T12:57:04Z",
      "side": 1,
      "message": "Files::isRegularFile",
      "range": {
        "startLine": 1212,
        "startChar": 45,
        "endLine": 1212,
        "endChar": 72
      },
      "revId": "3f7c42806397da29680552e5e15edf4187ecda16",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}